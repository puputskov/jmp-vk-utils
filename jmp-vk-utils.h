/*
Copyright (c) 2025 Jyri Puputti

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the “Software”), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#ifndef JMP_VK_UTILS_H
#define JMP_VK_UTILS_H

#include <vulkan/vulkan.h>

#ifdef JMP_VK_UTILS_ENABLE_ALL
	#define JMP_VK_UTILS_ENABLE_SET_NAME
	#define JMP_VK_UTILS_ENABLE_PRINT
	#define JMP_VK_UTILS_ENABLE_VK_STRUCTURE
#endif // JMP_VK_UTILS_ENABLE_ALL

#ifdef __STDC_VERSION__
#if __STDC_VERSION__ >= 201112L
#define JMP_VK_UTILS_C11
#endif // __STDC_VERSION__ >= 201112L
#endif // __STDC_VERSION__

#define jmp_vk_util_array_size(x)			(sizeof (x) / sizeof(*(x)))
#define jmp_vk_util_offset_of(type, field)	((uint64_t)(&(((type*)(0))->field)))

#if defined(JMP_VK_UTILS_ENABLE_SET_NAME) && defined(JMP_VK_UTILS_C11)
#define JMP_VK_HANDLE_TO_VK_OBJECT_TYPE(handle)	_Generic((handle),				\
						default: VK_OBJECT_TYPE_UNKNOWN,						\
					 VkInstance: VK_OBJECT_TYPE_INSTANCE,						\
			   VkPhysicalDevice: VK_OBJECT_TYPE_PHYSICAL_DEVICE,				\
					   VkDevice: VK_OBJECT_TYPE_DEVICE,							\
						VkQueue: VK_OBJECT_TYPE_QUEUE,							\
					VkSemaphore: VK_OBJECT_TYPE_SEMAPHORE,						\
				VkCommandBuffer: VK_OBJECT_TYPE_COMMAND_BUFFER,					\
						VkFence: VK_OBJECT_TYPE_FENCE,							\
				 VkDeviceMemory: VK_OBJECT_TYPE_DEVICE_MEMORY,					\
					   VkBuffer: VK_OBJECT_TYPE_BUFFER,							\
						VkImage: VK_OBJECT_TYPE_IMAGE,							\
						VkEvent: VK_OBJECT_TYPE_EVENT,							\
					VkQueryPool: VK_OBJECT_TYPE_QUERY_POOL,						\
				   VkBufferView: VK_OBJECT_TYPE_BUFFER_VIEW,					\
					VkImageView: VK_OBJECT_TYPE_IMAGE_VIEW,						\
				 VkShaderModule: VK_OBJECT_TYPE_SHADER_MODULE,					\
				VkPipelineCache: VK_OBJECT_TYPE_PIPELINE_CACHE,					\
			   VkPipelineLayout: VK_OBJECT_TYPE_PIPELINE_LAYOUT,				\
				   VkRenderPass: VK_OBJECT_TYPE_RENDER_PASS,					\
					 VkPipeline: VK_OBJECT_TYPE_PIPELINE,						\
		  VkDescriptorSetLayout: VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT,			\
					  VkSampler: VK_OBJECT_TYPE_SAMPLER,						\
			   VkDescriptorPool: VK_OBJECT_TYPE_DESCRIPTOR_POOL,				\
				VkDescriptorSet: VK_OBJECT_TYPE_DESCRIPTOR_SET,					\
				  VkFramebuffer: VK_OBJECT_TYPE_FRAMEBUFFER,					\
				  VkCommandPool: VK_OBJECT_TYPE_COMMAND_POOL,					\
	   VkSamplerYcbcrConversion: VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION,		\
	 VkDescriptorUpdateTemplate: VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE,		\
			  VkPrivateDataSlot: VK_OBJECT_TYPE_PRIVATE_DATA_SLOT,				\
				   VkSurfaceKHR: VK_OBJECT_TYPE_SURFACE_KHR,					\
				 VkSwapchainKHR: VK_OBJECT_TYPE_SWAPCHAIN_KHR,					\
				   VkDisplayKHR: VK_OBJECT_TYPE_DISPLAY_KHR,					\
			   VkDisplayModeKHR: VK_OBJECT_TYPE_DISPLAY_MODE_KHR,				\
	   VkDebugReportCallbackEXT: VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT,		\
			  VkVideoSessionKHR: VK_OBJECT_TYPE_VIDEO_SESSION_KHR,				\
	VkVideoSessionParametersKHR: VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR,	\
				  VkCuModuleNVX: VK_OBJECT_TYPE_CU_MODULE_NVX,					\
				VkCuFunctionNVX: VK_OBJECT_TYPE_CU_FUNCTION_NVX,				\
	   VkDebugUtilsMessengerEXT: VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT,		\
	 VkAccelerationStructureKHR: VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR,		\
		   VkValidationCacheEXT: VK_OBJECT_TYPE_VALIDATION_CACHE_EXT,			\
	  VkAccelerationStructureNV: VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV,		\
VkPerformanceConfigurationINTEL: VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL,\
		 VkDeferredOperationKHR: VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR,			\
	 VkIndirectCommandsLayoutNV: VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV,	\
				 VkCudaModuleNV: VK_OBJECT_TYPE_CUDA_MODULE_NV,					\
			   VkCudaFunctionNV: VK_OBJECT_TYPE_CUDA_FUNCTION_NV,				\
				  VkMicromapEXT: VK_OBJECT_TYPE_MICROMAP_EXT,					\
		 VkOpticalFlowSessionNV: VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV,		\
					VkShaderEXT: VK_OBJECT_TYPE_SHADER_EXT,						\
			VkPipelineBinaryKHR: VK_OBJECT_TYPE_PIPELINE_BINARY_KHR,			\
	VkIndirectCommandsLayoutEXT: VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_EXT,	\
	  VkIndirectExecutionSetEXT: VK_OBJECT_TYPE_INDIRECT_EXECUTION_SET_EXT)


#define jmp_vkSetName(device, pObjectHandle, pObjectName) jmp_vkSetName__impl((device), JMP_VK_HANDLE_TO_VK_OBJECT_TYPE (pObjectHandle), pObjectHandle, (pObjectName))
inline VkResult jmp_vkSetName__impl (VkDevice device, VkObjectType objectType, void *pObjectHandle, const char *pObjectName)
{
	VkResult result = VK_SUCCESS;
	PFN_vkSetDebugUtilsObjectNameEXT jmp_internal__vkSetDebugUtilsObjectNameEXT = NULL;
	if (NULL != device)
	{
		jmp_internal__vkSetDebugUtilsObjectNameEXT = (PFN_vkSetDebugUtilsObjectNameEXT) vkGetDeviceProcAddr (device, "vkSetDebugUtilsObjectNameEXT");
	}
	
	if (NULL != jmp_internal__vkSetDebugUtilsObjectNameEXT)
	{
		VkDebugUtilsObjectNameInfoEXT name_info = {
			.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,
			.pNext = NULL,
			.objectType = objectType,
			.objectHandle = ((uint64_t) pObjectHandle),
			.pObjectName = pObjectName,
		};

		result = jmp_internal__vkSetDebugUtilsObjectNameEXT (device, &name_info);
	}

	return (result);
}

#endif // JMP_VK_UTILS_ENABLE_SET_NAME




#if defined(JMP_VK_UTILS_ENABLE_PRINT)

typedef struct jmp_vk_util_field_info_t
{
	const char *name;
	uint64_t offset;
} jmp_vk_util_field_info_t;

typedef void(*jmp_vk_util_pfn_print_t)(const char *field_name, VkBool32 field_value);
inline void jmp_vkPrintPhysicalDeviceFeatures(const VkPhysicalDeviceFeatures *features, jmp_vk_util_pfn_print_t pfn_print)
{
	#define JMP_VK_UTIL_FIELD_INFO(t, f) { .name = #f, .offset = jmp_vk_util_offset_of (t, f) }
	static const jmp_vk_util_field_info_t jmp_vk_utils_VkPhysicalDeviceFeatures_fields [] = {
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, robustBufferAccess),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, fullDrawIndexUint32),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, imageCubeArray),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, independentBlend),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, geometryShader),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, tessellationShader),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sampleRateShading),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, dualSrcBlend),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, logicOp),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, multiDrawIndirect),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, drawIndirectFirstInstance),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, depthClamp),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, depthBiasClamp),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, fillModeNonSolid),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, depthBounds),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, wideLines),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, largePoints),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, alphaToOne),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, multiViewport),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, samplerAnisotropy),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, textureCompressionETC2),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, textureCompressionASTC_LDR),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, textureCompressionBC),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, occlusionQueryPrecise),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, pipelineStatisticsQuery),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, vertexPipelineStoresAndAtomics),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, fragmentStoresAndAtomics),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderTessellationAndGeometryPointSize),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderImageGatherExtended),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderStorageImageExtendedFormats),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderStorageImageMultisample),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderStorageImageReadWithoutFormat),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderStorageImageWriteWithoutFormat),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderUniformBufferArrayDynamicIndexing),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderSampledImageArrayDynamicIndexing),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderStorageBufferArrayDynamicIndexing),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderStorageImageArrayDynamicIndexing),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderClipDistance),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderCullDistance),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderFloat64),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderInt64),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderInt16),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderResourceResidency),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, shaderResourceMinLod),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseBinding),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidencyBuffer),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidencyImage2D),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidencyImage3D),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidency2Samples),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidency4Samples),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidency8Samples),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidency16Samples),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, sparseResidencyAliased),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, variableMultisampleRate),
		JMP_VK_UTIL_FIELD_INFO (VkPhysicalDeviceFeatures, inheritedQueries),
	};
	#undef JMP_VK_UTIL_FIELD_INFO

	uint8_t *ptr = (uint8_t *) features;
	for (uint32_t i = 0; i < jmp_vk_util_array_size (jmp_vk_utils_VkPhysicalDeviceFeatures_fields); ++ i)
	{
		jmp_vk_util_field_info_t field = jmp_vk_utils_VkPhysicalDeviceFeatures_fields [i];
		pfn_print (field.name, *((VkBool32*)(ptr + field.offset)));
	}
}

#endif // JMP_VK_UTILS_ENABLE_PRINT


#if defined(JMP_VK_UTILS_ENABLE_VK_STRUCTURE)

#ifdef __cplusplus
#define JMP_VK_UTIL__CAST_S(type) type
#else
#define JMP_VK_UTIL__CAST_S(type) (type)
#endif // __cplusplus

#define                                             jmp_VkApplicationInfo(...)                                             JMP_VK_UTIL__CAST_S(VkApplicationInfo) { .sType =                                                    VK_STRUCTURE_TYPE_APPLICATION_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkInstanceCreateInfo(...)                                          JMP_VK_UTIL__CAST_S(VkInstanceCreateInfo) { .sType =                                                VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkDeviceQueueCreateInfo(...)                                       JMP_VK_UTIL__CAST_S(VkDeviceQueueCreateInfo) { .sType =                                            VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkDeviceCreateInfo(...)                                            JMP_VK_UTIL__CAST_S(VkDeviceCreateInfo) { .sType =                                                  VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                                  jmp_VkSubmitInfo(...)                                                  JMP_VK_UTIL__CAST_S(VkSubmitInfo) { .sType =                                                         VK_STRUCTURE_TYPE_SUBMIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkMemoryAllocateInfo(...)                                          JMP_VK_UTIL__CAST_S(VkMemoryAllocateInfo) { .sType =                                                VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkMappedMemoryRange(...)                                           JMP_VK_UTIL__CAST_S(VkMappedMemoryRange) { .sType =                                                 VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkBindSparseInfo(...)                                              JMP_VK_UTIL__CAST_S(VkBindSparseInfo) { .sType =                                                    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                             jmp_VkFenceCreateInfo(...)                                             JMP_VK_UTIL__CAST_S(VkFenceCreateInfo) { .sType =                                                   VK_STRUCTURE_TYPE_FENCE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkSemaphoreCreateInfo(...)                                         JMP_VK_UTIL__CAST_S(VkSemaphoreCreateInfo) { .sType =                                               VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                             jmp_VkEventCreateInfo(...)                                             JMP_VK_UTIL__CAST_S(VkEventCreateInfo) { .sType =                                                   VK_STRUCTURE_TYPE_EVENT_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkQueryPoolCreateInfo(...)                                         JMP_VK_UTIL__CAST_S(VkQueryPoolCreateInfo) { .sType =                                              VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkBufferCreateInfo(...)                                            JMP_VK_UTIL__CAST_S(VkBufferCreateInfo) { .sType =                                                  VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkBufferViewCreateInfo(...)                                        JMP_VK_UTIL__CAST_S(VkBufferViewCreateInfo) { .sType =                                             VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                             jmp_VkImageCreateInfo(...)                                             JMP_VK_UTIL__CAST_S(VkImageCreateInfo) { .sType =                                                   VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkImageViewCreateInfo(...)                                         JMP_VK_UTIL__CAST_S(VkImageViewCreateInfo) { .sType =                                              VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkShaderModuleCreateInfo(...)                                      JMP_VK_UTIL__CAST_S(VkShaderModuleCreateInfo) { .sType =                                           VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkPipelineCacheCreateInfo(...)                                     JMP_VK_UTIL__CAST_S(VkPipelineCacheCreateInfo) { .sType =                                          VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkPipelineShaderStageCreateInfo(...)                               JMP_VK_UTIL__CAST_S(VkPipelineShaderStageCreateInfo) { .sType =                                   VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPipelineVertexInputStateCreateInfo(...)                          JMP_VK_UTIL__CAST_S(VkPipelineVertexInputStateCreateInfo) { .sType =                             VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPipelineInputAssemblyStateCreateInfo(...)                        JMP_VK_UTIL__CAST_S(VkPipelineInputAssemblyStateCreateInfo) { .sType =                           VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPipelineTessellationStateCreateInfo(...)                         JMP_VK_UTIL__CAST_S(VkPipelineTessellationStateCreateInfo) { .sType =                             VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPipelineViewportStateCreateInfo(...)                             JMP_VK_UTIL__CAST_S(VkPipelineViewportStateCreateInfo) { .sType =                                 VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPipelineRasterizationStateCreateInfo(...)                        JMP_VK_UTIL__CAST_S(VkPipelineRasterizationStateCreateInfo) { .sType =                            VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPipelineMultisampleStateCreateInfo(...)                          JMP_VK_UTIL__CAST_S(VkPipelineMultisampleStateCreateInfo) { .sType =                              VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPipelineDepthStencilStateCreateInfo(...)                         JMP_VK_UTIL__CAST_S(VkPipelineDepthStencilStateCreateInfo) { .sType =                            VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkPipelineColorBlendStateCreateInfo(...)                           JMP_VK_UTIL__CAST_S(VkPipelineColorBlendStateCreateInfo) { .sType =                              VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPipelineDynamicStateCreateInfo(...)                              JMP_VK_UTIL__CAST_S(VkPipelineDynamicStateCreateInfo) { .sType =                                  VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkGraphicsPipelineCreateInfo(...)                                  JMP_VK_UTIL__CAST_S(VkGraphicsPipelineCreateInfo) { .sType =                                       VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkComputePipelineCreateInfo(...)                                   JMP_VK_UTIL__CAST_S(VkComputePipelineCreateInfo) { .sType =                                        VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkPipelineLayoutCreateInfo(...)                                    JMP_VK_UTIL__CAST_S(VkPipelineLayoutCreateInfo) { .sType =                                         VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkSamplerCreateInfo(...)                                           JMP_VK_UTIL__CAST_S(VkSamplerCreateInfo) { .sType =                                                 VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkDescriptorSetLayoutCreateInfo(...)                               JMP_VK_UTIL__CAST_S(VkDescriptorSetLayoutCreateInfo) { .sType =                                   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkDescriptorPoolCreateInfo(...)                                    JMP_VK_UTIL__CAST_S(VkDescriptorPoolCreateInfo) { .sType =                                         VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkDescriptorSetAllocateInfo(...)                                   JMP_VK_UTIL__CAST_S(VkDescriptorSetAllocateInfo) { .sType =                                        VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkWriteDescriptorSet(...)                                          JMP_VK_UTIL__CAST_S(VkWriteDescriptorSet) { .sType =                                                VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkCopyDescriptorSet(...)                                           JMP_VK_UTIL__CAST_S(VkCopyDescriptorSet) { .sType =                                                 VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkFramebufferCreateInfo(...)                                       JMP_VK_UTIL__CAST_S(VkFramebufferCreateInfo) { .sType =                                             VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkRenderPassCreateInfo(...)                                        JMP_VK_UTIL__CAST_S(VkRenderPassCreateInfo) { .sType =                                             VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkCommandPoolCreateInfo(...)                                       JMP_VK_UTIL__CAST_S(VkCommandPoolCreateInfo) { .sType =                                            VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkCommandBufferAllocateInfo(...)                                   JMP_VK_UTIL__CAST_S(VkCommandBufferAllocateInfo) { .sType =                                        VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkCommandBufferInheritanceInfo(...)                                JMP_VK_UTIL__CAST_S(VkCommandBufferInheritanceInfo) { .sType =                                     VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkCommandBufferBeginInfo(...)                                      JMP_VK_UTIL__CAST_S(VkCommandBufferBeginInfo) { .sType =                                           VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkRenderPassBeginInfo(...)                                         JMP_VK_UTIL__CAST_S(VkRenderPassBeginInfo) { .sType =                                              VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkBufferMemoryBarrier(...)                                         JMP_VK_UTIL__CAST_S(VkBufferMemoryBarrier) { .sType =                                               VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkImageMemoryBarrier(...)                                          JMP_VK_UTIL__CAST_S(VkImageMemoryBarrier) { .sType =                                                VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER, .pNext = NULL, __VA_ARGS__ }
#define                                               jmp_VkMemoryBarrier(...)                                               JMP_VK_UTIL__CAST_S(VkMemoryBarrier) { .sType =                                                      VK_STRUCTURE_TYPE_MEMORY_BARRIER, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceSubgroupProperties(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSubgroupProperties) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkBindBufferMemoryInfo(...)                                        JMP_VK_UTIL__CAST_S(VkBindBufferMemoryInfo) { .sType =                                             VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkBindImageMemoryInfo(...)                                         JMP_VK_UTIL__CAST_S(VkBindImageMemoryInfo) { .sType =                                              VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPhysicalDevice16BitStorageFeatures(...)                          JMP_VK_UTIL__CAST_S(VkPhysicalDevice16BitStorageFeatures) { .sType =                              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkMemoryDedicatedRequirements(...)                                 JMP_VK_UTIL__CAST_S(VkMemoryDedicatedRequirements) { .sType =                                       VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkMemoryDedicatedAllocateInfo(...)                                 JMP_VK_UTIL__CAST_S(VkMemoryDedicatedAllocateInfo) { .sType =                                      VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkMemoryAllocateFlagsInfo(...)                                     JMP_VK_UTIL__CAST_S(VkMemoryAllocateFlagsInfo) { .sType =                                          VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkDeviceGroupRenderPassBeginInfo(...)                              JMP_VK_UTIL__CAST_S(VkDeviceGroupRenderPassBeginInfo) { .sType =                                 VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkDeviceGroupCommandBufferBeginInfo(...)                           JMP_VK_UTIL__CAST_S(VkDeviceGroupCommandBufferBeginInfo) { .sType =                              VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkDeviceGroupSubmitInfo(...)                                       JMP_VK_UTIL__CAST_S(VkDeviceGroupSubmitInfo) { .sType =                                            VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkDeviceGroupBindSparseInfo(...)                                   JMP_VK_UTIL__CAST_S(VkDeviceGroupBindSparseInfo) { .sType =                                       VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkBindBufferMemoryDeviceGroupInfo(...)                             JMP_VK_UTIL__CAST_S(VkBindBufferMemoryDeviceGroupInfo) { .sType =                                VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkBindImageMemoryDeviceGroupInfo(...)                              JMP_VK_UTIL__CAST_S(VkBindImageMemoryDeviceGroupInfo) { .sType =                                 VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkPhysicalDeviceGroupProperties(...)                               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceGroupProperties) { .sType =                                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkDeviceGroupDeviceCreateInfo(...)                                 JMP_VK_UTIL__CAST_S(VkDeviceGroupDeviceCreateInfo) { .sType =                                     VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkBufferMemoryRequirementsInfo2(...)                               JMP_VK_UTIL__CAST_S(VkBufferMemoryRequirementsInfo2) { .sType =                                   VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkImageMemoryRequirementsInfo2(...)                                JMP_VK_UTIL__CAST_S(VkImageMemoryRequirementsInfo2) { .sType =                                    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkImageSparseMemoryRequirementsInfo2(...)                          JMP_VK_UTIL__CAST_S(VkImageSparseMemoryRequirementsInfo2) { .sType =                             VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkMemoryRequirements2(...)                                         JMP_VK_UTIL__CAST_S(VkMemoryRequirements2) { .sType =                                               VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkSparseImageMemoryRequirements2(...)                              JMP_VK_UTIL__CAST_S(VkSparseImageMemoryRequirements2) { .sType =                                  VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkPhysicalDeviceFeatures2(...)                                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFeatures2) { .sType =                                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkPhysicalDeviceProperties2(...)                                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceProperties2) { .sType =                                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkFormatProperties2(...)                                           JMP_VK_UTIL__CAST_S(VkFormatProperties2) { .sType =                                                 VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkImageFormatProperties2(...)                                      JMP_VK_UTIL__CAST_S(VkImageFormatProperties2) { .sType =                                           VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceImageFormatInfo2(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageFormatInfo2) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkQueueFamilyProperties2(...)                                      JMP_VK_UTIL__CAST_S(VkQueueFamilyProperties2) { .sType =                                           VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPhysicalDeviceMemoryProperties2(...)                             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMemoryProperties2) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkSparseImageFormatProperties2(...)                                JMP_VK_UTIL__CAST_S(VkSparseImageFormatProperties2) { .sType =                                    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceSparseImageFormatInfo2(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSparseImageFormatInfo2) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDevicePointClippingProperties(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDevicePointClippingProperties) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkRenderPassInputAttachmentAspectCreateInfo(...)                   JMP_VK_UTIL__CAST_S(VkRenderPassInputAttachmentAspectCreateInfo) { .sType =                     VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkImageViewUsageCreateInfo(...)                                    JMP_VK_UTIL__CAST_S(VkImageViewUsageCreateInfo) { .sType =                                        VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPipelineTessellationDomainOriginStateCreateInfo(...)             JMP_VK_UTIL__CAST_S(VkPipelineTessellationDomainOriginStateCreateInfo) { .sType =               VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkRenderPassMultiviewCreateInfo(...)                               JMP_VK_UTIL__CAST_S(VkRenderPassMultiviewCreateInfo) { .sType =                                   VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPhysicalDeviceMultiviewFeatures(...)                             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiviewFeatures) { .sType =                                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkPhysicalDeviceMultiviewProperties(...)                           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiviewProperties) { .sType =                                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceVariablePointersFeatures(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVariablePointersFeatures) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkProtectedSubmitInfo(...)                                         JMP_VK_UTIL__CAST_S(VkProtectedSubmitInfo) { .sType =                                               VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceProtectedMemoryFeatures(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceProtectedMemoryFeatures) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceProtectedMemoryProperties(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceProtectedMemoryProperties) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkDeviceQueueInfo2(...)                                            JMP_VK_UTIL__CAST_S(VkDeviceQueueInfo2) { .sType =                                                 VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkSamplerYcbcrConversionCreateInfo(...)                            JMP_VK_UTIL__CAST_S(VkSamplerYcbcrConversionCreateInfo) { .sType =                                VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkSamplerYcbcrConversionInfo(...)                                  JMP_VK_UTIL__CAST_S(VkSamplerYcbcrConversionInfo) { .sType =                                       VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkBindImagePlaneMemoryInfo(...)                                    JMP_VK_UTIL__CAST_S(VkBindImagePlaneMemoryInfo) { .sType =                                        VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkImagePlaneMemoryRequirementsInfo(...)                            JMP_VK_UTIL__CAST_S(VkImagePlaneMemoryRequirementsInfo) { .sType =                                VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceSamplerYcbcrConversionFeatures(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSamplerYcbcrConversionFeatures) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkSamplerYcbcrConversionImageFormatProperties(...)                 JMP_VK_UTIL__CAST_S(VkSamplerYcbcrConversionImageFormatProperties) { .sType =                    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkDescriptorUpdateTemplateCreateInfo(...)                          JMP_VK_UTIL__CAST_S(VkDescriptorUpdateTemplateCreateInfo) { .sType =                              VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceExternalImageFormatInfo(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalImageFormatInfo) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkExternalImageFormatProperties(...)                               JMP_VK_UTIL__CAST_S(VkExternalImageFormatProperties) { .sType =                                    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceExternalBufferInfo(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalBufferInfo) { .sType =                                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkExternalBufferProperties(...)                                    JMP_VK_UTIL__CAST_S(VkExternalBufferProperties) { .sType =                                          VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkPhysicalDeviceIDProperties(...)                                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceIDProperties) { .sType =                                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkExternalMemoryBufferCreateInfo(...)                              JMP_VK_UTIL__CAST_S(VkExternalMemoryBufferCreateInfo) { .sType =                                  VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkExternalMemoryImageCreateInfo(...)                               JMP_VK_UTIL__CAST_S(VkExternalMemoryImageCreateInfo) { .sType =                                   VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkExportMemoryAllocateInfo(...)                                    JMP_VK_UTIL__CAST_S(VkExportMemoryAllocateInfo) { .sType =                                         VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPhysicalDeviceExternalFenceInfo(...)                             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalFenceInfo) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkExternalFenceProperties(...)                                     JMP_VK_UTIL__CAST_S(VkExternalFenceProperties) { .sType =                                           VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkExportFenceCreateInfo(...)                                       JMP_VK_UTIL__CAST_S(VkExportFenceCreateInfo) { .sType =                                            VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkExportSemaphoreCreateInfo(...)                                   JMP_VK_UTIL__CAST_S(VkExportSemaphoreCreateInfo) { .sType =                                        VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPhysicalDeviceExternalSemaphoreInfo(...)                         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalSemaphoreInfo) { .sType =                             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkExternalSemaphoreProperties(...)                                 JMP_VK_UTIL__CAST_S(VkExternalSemaphoreProperties) { .sType =                                       VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceMaintenance3Properties(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance3Properties) { .sType =                            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkDescriptorSetLayoutSupport(...)                                  JMP_VK_UTIL__CAST_S(VkDescriptorSetLayoutSupport) { .sType =                                       VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceShaderDrawParametersFeatures(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderDrawParametersFeatures) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceVulkan11Features(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkan11Features) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceVulkan11Properties(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkan11Properties) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceVulkan12Features(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkan12Features) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceVulkan12Properties(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkan12Properties) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkImageFormatListCreateInfo(...)                                   JMP_VK_UTIL__CAST_S(VkImageFormatListCreateInfo) { .sType =                                       VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkAttachmentDescription2(...)                                      JMP_VK_UTIL__CAST_S(VkAttachmentDescription2) { .sType =                                            VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkAttachmentReference2(...)                                        JMP_VK_UTIL__CAST_S(VkAttachmentReference2) { .sType =                                              VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkSubpassDescription2(...)                                         JMP_VK_UTIL__CAST_S(VkSubpassDescription2) { .sType =                                               VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkSubpassDependency2(...)                                          JMP_VK_UTIL__CAST_S(VkSubpassDependency2) { .sType =                                                VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkRenderPassCreateInfo2(...)                                       JMP_VK_UTIL__CAST_S(VkRenderPassCreateInfo2) { .sType =                                           VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkSubpassBeginInfo(...)                                            JMP_VK_UTIL__CAST_S(VkSubpassBeginInfo) { .sType =                                                  VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkSubpassEndInfo(...)                                              JMP_VK_UTIL__CAST_S(VkSubpassEndInfo) { .sType =                                                    VK_STRUCTURE_TYPE_SUBPASS_END_INFO, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkPhysicalDevice8BitStorageFeatures(...)                           JMP_VK_UTIL__CAST_S(VkPhysicalDevice8BitStorageFeatures) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceDriverProperties(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDriverProperties) { .sType =                                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceShaderAtomicInt64Features(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderAtomicInt64Features) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceShaderFloat16Int8Features(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderFloat16Int8Features) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceFloatControlsProperties(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFloatControlsProperties) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkDescriptorSetLayoutBindingFlagsCreateInfo(...)                   JMP_VK_UTIL__CAST_S(VkDescriptorSetLayoutBindingFlagsCreateInfo) { .sType =                     VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceDescriptorIndexingFeatures(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorIndexingFeatures) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceDescriptorIndexingProperties(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorIndexingProperties) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkDescriptorSetVariableDescriptorCountAllocateInfo(...)            JMP_VK_UTIL__CAST_S(VkDescriptorSetVariableDescriptorCountAllocateInfo) { .sType =              VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkDescriptorSetVariableDescriptorCountLayoutSupport(...)           JMP_VK_UTIL__CAST_S(VkDescriptorSetVariableDescriptorCountLayoutSupport) { .sType =             VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceDepthStencilResolveProperties(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDepthStencilResolveProperties) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkSubpassDescriptionDepthStencilResolve(...)                       JMP_VK_UTIL__CAST_S(VkSubpassDescriptionDepthStencilResolve) { .sType =                           VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceScalarBlockLayoutFeatures(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceScalarBlockLayoutFeatures) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkImageStencilUsageCreateInfo(...)                                 JMP_VK_UTIL__CAST_S(VkImageStencilUsageCreateInfo) { .sType =                                     VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceSamplerFilterMinmaxProperties(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSamplerFilterMinmaxProperties) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkSamplerReductionModeCreateInfo(...)                              JMP_VK_UTIL__CAST_S(VkSamplerReductionModeCreateInfo) { .sType =                                  VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceVulkanMemoryModelFeatures(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkanMemoryModelFeatures) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceImagelessFramebufferFeatures(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImagelessFramebufferFeatures) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkFramebufferAttachmentsCreateInfo(...)                            JMP_VK_UTIL__CAST_S(VkFramebufferAttachmentsCreateInfo) { .sType =                                 VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkFramebufferAttachmentImageInfo(...)                              JMP_VK_UTIL__CAST_S(VkFramebufferAttachmentImageInfo) { .sType =                                   VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkRenderPassAttachmentBeginInfo(...)                               JMP_VK_UTIL__CAST_S(VkRenderPassAttachmentBeginInfo) { .sType =                                   VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceUniformBufferStandardLayoutFeatures) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkAttachmentReferenceStencilLayout(...)                            JMP_VK_UTIL__CAST_S(VkAttachmentReferenceStencilLayout) { .sType =                                 VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkAttachmentDescriptionStencilLayout(...)                          JMP_VK_UTIL__CAST_S(VkAttachmentDescriptionStencilLayout) { .sType =                               VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceHostQueryResetFeatures(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceHostQueryResetFeatures) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceTimelineSemaphoreFeatures(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTimelineSemaphoreFeatures) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceTimelineSemaphoreProperties(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTimelineSemaphoreProperties) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkSemaphoreTypeCreateInfo(...)                                     JMP_VK_UTIL__CAST_S(VkSemaphoreTypeCreateInfo) { .sType =                                          VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkTimelineSemaphoreSubmitInfo(...)                                 JMP_VK_UTIL__CAST_S(VkTimelineSemaphoreSubmitInfo) { .sType =                                      VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkSemaphoreWaitInfo(...)                                           JMP_VK_UTIL__CAST_S(VkSemaphoreWaitInfo) { .sType =                                                 VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkSemaphoreSignalInfo(...)                                         JMP_VK_UTIL__CAST_S(VkSemaphoreSignalInfo) { .sType =                                               VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceBufferDeviceAddressFeatures(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceBufferDeviceAddressFeatures) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkBufferDeviceAddressInfo(...)                                     JMP_VK_UTIL__CAST_S(VkBufferDeviceAddressInfo) { .sType =                                          VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkBufferOpaqueCaptureAddressCreateInfo(...)                        JMP_VK_UTIL__CAST_S(VkBufferOpaqueCaptureAddressCreateInfo) { .sType =                           VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkMemoryOpaqueCaptureAddressAllocateInfo(...)                      JMP_VK_UTIL__CAST_S(VkMemoryOpaqueCaptureAddressAllocateInfo) { .sType =                         VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkDeviceMemoryOpaqueCaptureAddressInfo(...)                        JMP_VK_UTIL__CAST_S(VkDeviceMemoryOpaqueCaptureAddressInfo) { .sType =                           VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceVulkan13Features(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkan13Features) { .sType =                                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceVulkan13Properties(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVulkan13Properties) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPipelineCreationFeedbackCreateInfo(...)                          JMP_VK_UTIL__CAST_S(VkPipelineCreationFeedbackCreateInfo) { .sType =                              VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceShaderTerminateInvocationFeatures(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderTerminateInvocationFeatures) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkPhysicalDeviceToolProperties(...)                                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceToolProperties) { .sType =                                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures) { .sType =         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkPhysicalDevicePrivateDataFeatures(...)                           JMP_VK_UTIL__CAST_S(VkPhysicalDevicePrivateDataFeatures) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkDevicePrivateDataCreateInfo(...)                                 JMP_VK_UTIL__CAST_S(VkDevicePrivateDataCreateInfo) { .sType =                                     VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkPrivateDataSlotCreateInfo(...)                                   JMP_VK_UTIL__CAST_S(VkPrivateDataSlotCreateInfo) { .sType =                                       VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDevicePipelineCreationCacheControlFeatures(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineCreationCacheControlFeatures) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkMemoryBarrier2(...)                                              JMP_VK_UTIL__CAST_S(VkMemoryBarrier2) { .sType =                                                    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkBufferMemoryBarrier2(...)                                        JMP_VK_UTIL__CAST_S(VkBufferMemoryBarrier2) { .sType =                                             VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkImageMemoryBarrier2(...)                                         JMP_VK_UTIL__CAST_S(VkImageMemoryBarrier2) { .sType =                                              VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkDependencyInfo(...)                                              JMP_VK_UTIL__CAST_S(VkDependencyInfo) { .sType =                                                     VK_STRUCTURE_TYPE_DEPENDENCY_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                                 jmp_VkSubmitInfo2(...)                                                 JMP_VK_UTIL__CAST_S(VkSubmitInfo2) { .sType =                                                       VK_STRUCTURE_TYPE_SUBMIT_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkSemaphoreSubmitInfo(...)                                         JMP_VK_UTIL__CAST_S(VkSemaphoreSubmitInfo) { .sType =                                               VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkCommandBufferSubmitInfo(...)                                     JMP_VK_UTIL__CAST_S(VkCommandBufferSubmitInfo) { .sType =                                          VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceSynchronization2Features(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSynchronization2Features) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceImageRobustnessFeatures(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageRobustnessFeatures) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                             jmp_VkCopyBufferInfo2(...)                                             JMP_VK_UTIL__CAST_S(VkCopyBufferInfo2) { .sType =                                                  VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkCopyImageInfo2(...)                                              JMP_VK_UTIL__CAST_S(VkCopyImageInfo2) { .sType =                                                   VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkCopyBufferToImageInfo2(...)                                      JMP_VK_UTIL__CAST_S(VkCopyBufferToImageInfo2) { .sType =                                         VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkCopyImageToBufferInfo2(...)                                      JMP_VK_UTIL__CAST_S(VkCopyImageToBufferInfo2) { .sType =                                         VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkBlitImageInfo2(...)                                              JMP_VK_UTIL__CAST_S(VkBlitImageInfo2) { .sType =                                                   VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkResolveImageInfo2(...)                                           JMP_VK_UTIL__CAST_S(VkResolveImageInfo2) { .sType =                                                VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2, .pNext = NULL, __VA_ARGS__ }
#define                                                 jmp_VkBufferCopy2(...)                                                 JMP_VK_UTIL__CAST_S(VkBufferCopy2) { .sType =                                                       VK_STRUCTURE_TYPE_BUFFER_COPY_2, .pNext = NULL, __VA_ARGS__ }
#define                                                  jmp_VkImageCopy2(...)                                                  JMP_VK_UTIL__CAST_S(VkImageCopy2) { .sType =                                                        VK_STRUCTURE_TYPE_IMAGE_COPY_2, .pNext = NULL, __VA_ARGS__ }
#define                                                  jmp_VkImageBlit2(...)                                                  JMP_VK_UTIL__CAST_S(VkImageBlit2) { .sType =                                                        VK_STRUCTURE_TYPE_IMAGE_BLIT_2, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkBufferImageCopy2(...)                                            JMP_VK_UTIL__CAST_S(VkBufferImageCopy2) { .sType =                                                 VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2, .pNext = NULL, __VA_ARGS__ }
#define                                               jmp_VkImageResolve2(...)                                               JMP_VK_UTIL__CAST_S(VkImageResolve2) { .sType =                                                     VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceSubgroupSizeControlProperties(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSubgroupSizeControlProperties) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(...)           JMP_VK_UTIL__CAST_S(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo) { .sType =            VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceSubgroupSizeControlFeatures(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSubgroupSizeControlFeatures) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceInlineUniformBlockFeatures(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceInlineUniformBlockFeatures) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceInlineUniformBlockProperties(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceInlineUniformBlockProperties) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkWriteDescriptorSetInlineUniformBlock(...)                        JMP_VK_UTIL__CAST_S(VkWriteDescriptorSetInlineUniformBlock) { .sType =                           VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkDescriptorPoolInlineUniformBlockCreateInfo(...)                  JMP_VK_UTIL__CAST_S(VkDescriptorPoolInlineUniformBlockCreateInfo) { .sType =                    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTextureCompressionASTCHDRFeatures) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                                               jmp_VkRenderingInfo(...)                                               JMP_VK_UTIL__CAST_S(VkRenderingInfo) { .sType =                                                      VK_STRUCTURE_TYPE_RENDERING_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkRenderingAttachmentInfo(...)                                     JMP_VK_UTIL__CAST_S(VkRenderingAttachmentInfo) { .sType =                                           VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkPipelineRenderingCreateInfo(...)                                 JMP_VK_UTIL__CAST_S(VkPipelineRenderingCreateInfo) { .sType =                                      VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceDynamicRenderingFeatures(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDynamicRenderingFeatures) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkCommandBufferInheritanceRenderingInfo(...)                       JMP_VK_UTIL__CAST_S(VkCommandBufferInheritanceRenderingInfo) { .sType =                           VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceShaderIntegerDotProductFeatures(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderIntegerDotProductFeatures) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceShaderIntegerDotProductProperties(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderIntegerDotProductProperties) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceTexelBufferAlignmentProperties(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTexelBufferAlignmentProperties) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkFormatProperties3(...)                                           JMP_VK_UTIL__CAST_S(VkFormatProperties3) { .sType =                                                 VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPhysicalDeviceMaintenance4Features(...)                          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance4Features) { .sType =                              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceMaintenance4Properties(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance4Properties) { .sType =                            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkDeviceBufferMemoryRequirements(...)                              JMP_VK_UTIL__CAST_S(VkDeviceBufferMemoryRequirements) { .sType =                                   VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkDeviceImageMemoryRequirements(...)                               JMP_VK_UTIL__CAST_S(VkDeviceImageMemoryRequirements) { .sType =                                    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkSwapchainCreateInfoKHR(...)                                      JMP_VK_UTIL__CAST_S(VkSwapchainCreateInfoKHR) { .sType =                                           VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkPresentInfoKHR(...)                                              JMP_VK_UTIL__CAST_S(VkPresentInfoKHR) { .sType =                                                    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkDeviceGroupPresentCapabilitiesKHR(...)                           JMP_VK_UTIL__CAST_S(VkDeviceGroupPresentCapabilitiesKHR) { .sType =                               VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkImageSwapchainCreateInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkImageSwapchainCreateInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkBindImageMemorySwapchainInfoKHR(...)                             JMP_VK_UTIL__CAST_S(VkBindImageMemorySwapchainInfoKHR) { .sType =                                VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkAcquireNextImageInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkAcquireNextImageInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkDeviceGroupPresentInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkDeviceGroupPresentInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkDeviceGroupSwapchainCreateInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkDeviceGroupSwapchainCreateInfoKHR) { .sType =                              VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkDisplayModeCreateInfoKHR(...)                                    JMP_VK_UTIL__CAST_S(VkDisplayModeCreateInfoKHR) { .sType =                                        VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkDisplaySurfaceCreateInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkDisplaySurfaceCreateInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkDisplayPresentInfoKHR(...)                                       JMP_VK_UTIL__CAST_S(VkDisplayPresentInfoKHR) { .sType =                                            VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkXlibSurfaceCreateInfoKHR(...)                                    JMP_VK_UTIL__CAST_S(VkXlibSurfaceCreateInfoKHR) { .sType =                                        VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkXcbSurfaceCreateInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkXcbSurfaceCreateInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkWaylandSurfaceCreateInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkWaylandSurfaceCreateInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkAndroidSurfaceCreateInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkAndroidSurfaceCreateInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkWin32SurfaceCreateInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkWin32SurfaceCreateInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkDebugReportCallbackCreateInfoEXT(...)                            JMP_VK_UTIL__CAST_S(VkDebugReportCallbackCreateInfoEXT) { .sType =                               VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPipelineRasterizationStateRasterizationOrderAMD(...)             JMP_VK_UTIL__CAST_S(VkPipelineRasterizationStateRasterizationOrderAMD) { .sType =                VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkDebugMarkerObjectNameInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkDebugMarkerObjectNameInfoEXT) { .sType =                                   VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkDebugMarkerObjectTagInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkDebugMarkerObjectTagInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkDebugMarkerMarkerInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkDebugMarkerMarkerInfoEXT) { .sType =                                        VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkVideoProfileInfoKHR(...)                                         JMP_VK_UTIL__CAST_S(VkVideoProfileInfoKHR) { .sType =                                              VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkVideoCapabilitiesKHR(...)                                        JMP_VK_UTIL__CAST_S(VkVideoCapabilitiesKHR) { .sType =                                              VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkVideoPictureResourceInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkVideoPictureResourceInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkVideoSessionMemoryRequirementsKHR(...)                           JMP_VK_UTIL__CAST_S(VkVideoSessionMemoryRequirementsKHR) { .sType =                               VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkBindVideoSessionMemoryInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkBindVideoSessionMemoryInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkVideoSessionCreateInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkVideoSessionCreateInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkVideoSessionParametersCreateInfoKHR(...)                         JMP_VK_UTIL__CAST_S(VkVideoSessionParametersCreateInfoKHR) { .sType =                            VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkVideoSessionParametersUpdateInfoKHR(...)                         JMP_VK_UTIL__CAST_S(VkVideoSessionParametersUpdateInfoKHR) { .sType =                            VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkVideoBeginCodingInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkVideoBeginCodingInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkVideoEndCodingInfoKHR(...)                                       JMP_VK_UTIL__CAST_S(VkVideoEndCodingInfoKHR) { .sType =                                           VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkVideoCodingControlInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkVideoCodingControlInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkVideoReferenceSlotInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkVideoReferenceSlotInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkQueueFamilyVideoPropertiesKHR(...)                               JMP_VK_UTIL__CAST_S(VkQueueFamilyVideoPropertiesKHR) { .sType =                                   VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkVideoProfileListInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkVideoProfileListInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceVideoFormatInfoKHR(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVideoFormatInfoKHR) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkVideoFormatPropertiesKHR(...)                                    JMP_VK_UTIL__CAST_S(VkVideoFormatPropertiesKHR) { .sType =                                         VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkQueueFamilyQueryResultStatusPropertiesKHR(...)                   JMP_VK_UTIL__CAST_S(VkQueueFamilyQueryResultStatusPropertiesKHR) { .sType =                     VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkVideoDecodeInfoKHR(...)                                          JMP_VK_UTIL__CAST_S(VkVideoDecodeInfoKHR) { .sType =                                               VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkVideoDecodeCapabilitiesKHR(...)                                  JMP_VK_UTIL__CAST_S(VkVideoDecodeCapabilitiesKHR) { .sType =                                       VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkVideoDecodeUsageInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkVideoDecodeUsageInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkDedicatedAllocationImageCreateInfoNV(...)                        JMP_VK_UTIL__CAST_S(VkDedicatedAllocationImageCreateInfoNV) { .sType =                           VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkDedicatedAllocationBufferCreateInfoNV(...)                       JMP_VK_UTIL__CAST_S(VkDedicatedAllocationBufferCreateInfoNV) { .sType =                          VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkDedicatedAllocationMemoryAllocateInfoNV(...)                     JMP_VK_UTIL__CAST_S(VkDedicatedAllocationMemoryAllocateInfoNV) { .sType =                        VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceTransformFeedbackFeaturesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTransformFeedbackFeaturesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceTransformFeedbackPropertiesEXT(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTransformFeedbackPropertiesEXT) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPipelineRasterizationStateStreamCreateInfoEXT(...)               JMP_VK_UTIL__CAST_S(VkPipelineRasterizationStateStreamCreateInfoEXT) { .sType =                 VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkCuModuleCreateInfoNVX(...)                                       JMP_VK_UTIL__CAST_S(VkCuModuleCreateInfoNVX) { .sType =                                           VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkCuFunctionCreateInfoNVX(...)                                     JMP_VK_UTIL__CAST_S(VkCuFunctionCreateInfoNVX) { .sType =                                         VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX, .pNext = NULL, __VA_ARGS__ }
#define                                             jmp_VkCuLaunchInfoNVX(...)                                             JMP_VK_UTIL__CAST_S(VkCuLaunchInfoNVX) { .sType =                                                  VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkImageViewHandleInfoNVX(...)                                      JMP_VK_UTIL__CAST_S(VkImageViewHandleInfoNVX) { .sType =                                          VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkImageViewAddressPropertiesNVX(...)                               JMP_VK_UTIL__CAST_S(VkImageViewAddressPropertiesNVX) { .sType =                                   VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkVideoEncodeH264CapabilitiesKHR(...)                              JMP_VK_UTIL__CAST_S(VkVideoEncodeH264CapabilitiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkVideoEncodeH264SessionParametersCreateInfoKHR(...)               JMP_VK_UTIL__CAST_S(VkVideoEncodeH264SessionParametersCreateInfoKHR) { .sType =                VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkVideoEncodeH264SessionParametersAddInfoKHR(...)                  JMP_VK_UTIL__CAST_S(VkVideoEncodeH264SessionParametersAddInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeH264PictureInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeH264PictureInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeH264DpbSlotInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeH264DpbSlotInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkVideoEncodeH264NaluSliceInfoKHR(...)                             JMP_VK_UTIL__CAST_S(VkVideoEncodeH264NaluSliceInfoKHR) { .sType =                               VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkVideoEncodeH264GopRemainingFrameInfoKHR(...)                     JMP_VK_UTIL__CAST_S(VkVideoEncodeH264GopRemainingFrameInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeH264ProfileInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeH264ProfileInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkVideoEncodeH264RateControlInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkVideoEncodeH264RateControlInfoKHR) { .sType =                             VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkVideoEncodeH264RateControlLayerInfoKHR(...)                      JMP_VK_UTIL__CAST_S(VkVideoEncodeH264RateControlLayerInfoKHR) { .sType =                       VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkVideoEncodeH264SessionCreateInfoKHR(...)                         JMP_VK_UTIL__CAST_S(VkVideoEncodeH264SessionCreateInfoKHR) { .sType =                           VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkVideoEncodeH264QualityLevelPropertiesKHR(...)                    JMP_VK_UTIL__CAST_S(VkVideoEncodeH264QualityLevelPropertiesKHR) { .sType =                      VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkVideoEncodeH264SessionParametersGetInfoKHR(...)                  JMP_VK_UTIL__CAST_S(VkVideoEncodeH264SessionParametersGetInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkVideoEncodeH264SessionParametersFeedbackInfoKHR(...)             JMP_VK_UTIL__CAST_S(VkVideoEncodeH264SessionParametersFeedbackInfoKHR) { .sType =              VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkVideoEncodeH265CapabilitiesKHR(...)                              JMP_VK_UTIL__CAST_S(VkVideoEncodeH265CapabilitiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkVideoEncodeH265SessionParametersCreateInfoKHR(...)               JMP_VK_UTIL__CAST_S(VkVideoEncodeH265SessionParametersCreateInfoKHR) { .sType =                VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkVideoEncodeH265SessionParametersAddInfoKHR(...)                  JMP_VK_UTIL__CAST_S(VkVideoEncodeH265SessionParametersAddInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeH265PictureInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeH265PictureInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeH265DpbSlotInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeH265DpbSlotInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkVideoEncodeH265NaluSliceSegmentInfoKHR(...)                      JMP_VK_UTIL__CAST_S(VkVideoEncodeH265NaluSliceSegmentInfoKHR) { .sType =                       VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkVideoEncodeH265GopRemainingFrameInfoKHR(...)                     JMP_VK_UTIL__CAST_S(VkVideoEncodeH265GopRemainingFrameInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeH265ProfileInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeH265ProfileInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkVideoEncodeH265RateControlInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkVideoEncodeH265RateControlInfoKHR) { .sType =                             VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkVideoEncodeH265RateControlLayerInfoKHR(...)                      JMP_VK_UTIL__CAST_S(VkVideoEncodeH265RateControlLayerInfoKHR) { .sType =                       VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkVideoEncodeH265SessionCreateInfoKHR(...)                         JMP_VK_UTIL__CAST_S(VkVideoEncodeH265SessionCreateInfoKHR) { .sType =                           VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkVideoEncodeH265QualityLevelPropertiesKHR(...)                    JMP_VK_UTIL__CAST_S(VkVideoEncodeH265QualityLevelPropertiesKHR) { .sType =                      VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkVideoEncodeH265SessionParametersGetInfoKHR(...)                  JMP_VK_UTIL__CAST_S(VkVideoEncodeH265SessionParametersGetInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkVideoEncodeH265SessionParametersFeedbackInfoKHR(...)             JMP_VK_UTIL__CAST_S(VkVideoEncodeH265SessionParametersFeedbackInfoKHR) { .sType =              VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkVideoDecodeH264CapabilitiesKHR(...)                              JMP_VK_UTIL__CAST_S(VkVideoDecodeH264CapabilitiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeH264PictureInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeH264PictureInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeH264ProfileInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeH264ProfileInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkVideoDecodeH264SessionParametersCreateInfoKHR(...)               JMP_VK_UTIL__CAST_S(VkVideoDecodeH264SessionParametersCreateInfoKHR) { .sType =                VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkVideoDecodeH264SessionParametersAddInfoKHR(...)                  JMP_VK_UTIL__CAST_S(VkVideoDecodeH264SessionParametersAddInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeH264DpbSlotInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeH264DpbSlotInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkTextureLODGatherFormatPropertiesAMD(...)                         JMP_VK_UTIL__CAST_S(VkTextureLODGatherFormatPropertiesAMD) { .sType =                            VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkRenderingFragmentShadingRateAttachmentInfoKHR(...)               JMP_VK_UTIL__CAST_S(VkRenderingFragmentShadingRateAttachmentInfoKHR) { .sType =                 VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkRenderingFragmentDensityMapAttachmentInfoEXT(...)                JMP_VK_UTIL__CAST_S(VkRenderingFragmentDensityMapAttachmentInfoEXT) { .sType =                  VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkAttachmentSampleCountInfoAMD(...)                                JMP_VK_UTIL__CAST_S(VkAttachmentSampleCountInfoAMD) { .sType =                                    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkMultiviewPerViewAttributesInfoNVX(...)                           JMP_VK_UTIL__CAST_S(VkMultiviewPerViewAttributesInfoNVX) { .sType =                              VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkStreamDescriptorSurfaceCreateInfoGGP(...)                        JMP_VK_UTIL__CAST_S(VkStreamDescriptorSurfaceCreateInfoGGP) { .sType =                           VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceCornerSampledImageFeaturesNV(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCornerSampledImageFeaturesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkExternalMemoryImageCreateInfoNV(...)                             JMP_VK_UTIL__CAST_S(VkExternalMemoryImageCreateInfoNV) { .sType =                                VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkExportMemoryAllocateInfoNV(...)                                  JMP_VK_UTIL__CAST_S(VkExportMemoryAllocateInfoNV) { .sType =                                      VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkImportMemoryWin32HandleInfoNV(...)                               JMP_VK_UTIL__CAST_S(VkImportMemoryWin32HandleInfoNV) { .sType =                                  VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkExportMemoryWin32HandleInfoNV(...)                               JMP_VK_UTIL__CAST_S(VkExportMemoryWin32HandleInfoNV) { .sType =                                  VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkWin32KeyedMutexAcquireReleaseInfoNV(...)                         JMP_VK_UTIL__CAST_S(VkWin32KeyedMutexAcquireReleaseInfoNV) { .sType =                           VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkValidationFlagsEXT(...)                                          JMP_VK_UTIL__CAST_S(VkValidationFlagsEXT) { .sType =                                                VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkViSurfaceCreateInfoNN(...)                                       JMP_VK_UTIL__CAST_S(VkViSurfaceCreateInfoNN) { .sType =                                           VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkImageViewASTCDecodeModeEXT(...)                                  JMP_VK_UTIL__CAST_S(VkImageViewASTCDecodeModeEXT) { .sType =                                     VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPhysicalDeviceASTCDecodeFeaturesEXT(...)                         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceASTCDecodeFeaturesEXT) { .sType =                            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPipelineRobustnessCreateInfoEXT(...)                             JMP_VK_UTIL__CAST_S(VkPipelineRobustnessCreateInfoEXT) { .sType =                                 VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDevicePipelineRobustnessFeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineRobustnessFeaturesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDevicePipelineRobustnessPropertiesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineRobustnessPropertiesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkImportMemoryWin32HandleInfoKHR(...)                              JMP_VK_UTIL__CAST_S(VkImportMemoryWin32HandleInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkExportMemoryWin32HandleInfoKHR(...)                              JMP_VK_UTIL__CAST_S(VkExportMemoryWin32HandleInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkMemoryWin32HandlePropertiesKHR(...)                              JMP_VK_UTIL__CAST_S(VkMemoryWin32HandlePropertiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkMemoryGetWin32HandleInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkMemoryGetWin32HandleInfoKHR) { .sType =                                    VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkImportMemoryFdInfoKHR(...)                                       JMP_VK_UTIL__CAST_S(VkImportMemoryFdInfoKHR) { .sType =                                           VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkMemoryFdPropertiesKHR(...)                                       JMP_VK_UTIL__CAST_S(VkMemoryFdPropertiesKHR) { .sType =                                            VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkMemoryGetFdInfoKHR(...)                                          JMP_VK_UTIL__CAST_S(VkMemoryGetFdInfoKHR) { .sType =                                              VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkWin32KeyedMutexAcquireReleaseInfoKHR(...)                        JMP_VK_UTIL__CAST_S(VkWin32KeyedMutexAcquireReleaseInfoKHR) { .sType =                          VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkImportSemaphoreWin32HandleInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkImportSemaphoreWin32HandleInfoKHR) { .sType =                              VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkExportSemaphoreWin32HandleInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkExportSemaphoreWin32HandleInfoKHR) { .sType =                              VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkD3D12FenceSubmitInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkD3D12FenceSubmitInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkSemaphoreGetWin32HandleInfoKHR(...)                              JMP_VK_UTIL__CAST_S(VkSemaphoreGetWin32HandleInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkImportSemaphoreFdInfoKHR(...)                                    JMP_VK_UTIL__CAST_S(VkImportSemaphoreFdInfoKHR) { .sType =                                        VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkSemaphoreGetFdInfoKHR(...)                                       JMP_VK_UTIL__CAST_S(VkSemaphoreGetFdInfoKHR) { .sType =                                           VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDevicePushDescriptorPropertiesKHR(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDevicePushDescriptorPropertiesKHR) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkCommandBufferInheritanceConditionalRenderingInfoEXT(...)         JMP_VK_UTIL__CAST_S(VkCommandBufferInheritanceConditionalRenderingInfoEXT) { .sType =           VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceConditionalRenderingFeaturesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceConditionalRenderingFeaturesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkConditionalRenderingBeginInfoEXT(...)                            JMP_VK_UTIL__CAST_S(VkConditionalRenderingBeginInfoEXT) { .sType =                                VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkPresentRegionsKHR(...)                                           JMP_VK_UTIL__CAST_S(VkPresentRegionsKHR) { .sType =                                                 VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPipelineViewportWScalingStateCreateInfoNV(...)                   JMP_VK_UTIL__CAST_S(VkPipelineViewportWScalingStateCreateInfoNV) { .sType =                    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkSurfaceCapabilities2EXT(...)                                     JMP_VK_UTIL__CAST_S(VkSurfaceCapabilities2EXT) { .sType =                                          VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkDisplayPowerInfoEXT(...)                                         JMP_VK_UTIL__CAST_S(VkDisplayPowerInfoEXT) { .sType =                                              VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkDeviceEventInfoEXT(...)                                          JMP_VK_UTIL__CAST_S(VkDeviceEventInfoEXT) { .sType =                                               VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkDisplayEventInfoEXT(...)                                         JMP_VK_UTIL__CAST_S(VkDisplayEventInfoEXT) { .sType =                                              VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkSwapchainCounterCreateInfoEXT(...)                               JMP_VK_UTIL__CAST_S(VkSwapchainCounterCreateInfoEXT) { .sType =                                   VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkPresentTimesInfoGOOGLE(...)                                      JMP_VK_UTIL__CAST_S(VkPresentTimesInfoGOOGLE) { .sType =                                           VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX) { .sType =        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPipelineViewportSwizzleStateCreateInfoNV(...)                    JMP_VK_UTIL__CAST_S(VkPipelineViewportSwizzleStateCreateInfoNV) { .sType =                      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceDiscardRectanglePropertiesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDiscardRectanglePropertiesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPipelineDiscardRectangleStateCreateInfoEXT(...)                  JMP_VK_UTIL__CAST_S(VkPipelineDiscardRectangleStateCreateInfoEXT) { .sType =                    VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceConservativeRasterizationPropertiesEXT) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPipelineRasterizationConservativeStateCreateInfoEXT(...)         JMP_VK_UTIL__CAST_S(VkPipelineRasterizationConservativeStateCreateInfoEXT) { .sType =           VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceDepthClipEnableFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDepthClipEnableFeaturesEXT) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPipelineRasterizationDepthClipStateCreateInfoEXT(...)            JMP_VK_UTIL__CAST_S(VkPipelineRasterizationDepthClipStateCreateInfoEXT) { .sType =             VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkHdrMetadataEXT(...)                                              JMP_VK_UTIL__CAST_S(VkHdrMetadataEXT) { .sType =                                                    VK_STRUCTURE_TYPE_HDR_METADATA_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkSharedPresentSurfaceCapabilitiesKHR(...)                         JMP_VK_UTIL__CAST_S(VkSharedPresentSurfaceCapabilitiesKHR) { .sType =                             VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkImportFenceWin32HandleInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkImportFenceWin32HandleInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkExportFenceWin32HandleInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkExportFenceWin32HandleInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkFenceGetWin32HandleInfoKHR(...)                                  JMP_VK_UTIL__CAST_S(VkFenceGetWin32HandleInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkImportFenceFdInfoKHR(...)                                        JMP_VK_UTIL__CAST_S(VkImportFenceFdInfoKHR) { .sType =                                            VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkFenceGetFdInfoKHR(...)                                           JMP_VK_UTIL__CAST_S(VkFenceGetFdInfoKHR) { .sType =                                               VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDevicePerformanceQueryFeaturesKHR(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDevicePerformanceQueryFeaturesKHR) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDevicePerformanceQueryPropertiesKHR(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDevicePerformanceQueryPropertiesKHR) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkQueryPoolPerformanceCreateInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkQueryPoolPerformanceCreateInfoKHR) { .sType =                              VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkPerformanceQuerySubmitInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkPerformanceQuerySubmitInfoKHR) { .sType =                                   VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkAcquireProfilingLockInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkAcquireProfilingLockInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkPerformanceCounterKHR(...)                                       JMP_VK_UTIL__CAST_S(VkPerformanceCounterKHR) { .sType =                                             VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPerformanceCounterDescriptionKHR(...)                            JMP_VK_UTIL__CAST_S(VkPerformanceCounterDescriptionKHR) { .sType =                                 VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkPhysicalDeviceSurfaceInfo2KHR(...)                               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSurfaceInfo2KHR) { .sType =                                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkSurfaceCapabilities2KHR(...)                                     JMP_VK_UTIL__CAST_S(VkSurfaceCapabilities2KHR) { .sType =                                          VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkSurfaceFormat2KHR(...)                                           JMP_VK_UTIL__CAST_S(VkSurfaceFormat2KHR) { .sType =                                                VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkDisplayProperties2KHR(...)                                       JMP_VK_UTIL__CAST_S(VkDisplayProperties2KHR) { .sType =                                            VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkDisplayPlaneProperties2KHR(...)                                  JMP_VK_UTIL__CAST_S(VkDisplayPlaneProperties2KHR) { .sType =                                      VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkDisplayModeProperties2KHR(...)                                   JMP_VK_UTIL__CAST_S(VkDisplayModeProperties2KHR) { .sType =                                       VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkDisplayPlaneInfo2KHR(...)                                        JMP_VK_UTIL__CAST_S(VkDisplayPlaneInfo2KHR) { .sType =                                            VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkDisplayPlaneCapabilities2KHR(...)                                JMP_VK_UTIL__CAST_S(VkDisplayPlaneCapabilities2KHR) { .sType =                                    VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkIOSSurfaceCreateInfoMVK(...)                                     JMP_VK_UTIL__CAST_S(VkIOSSurfaceCreateInfoMVK) { .sType =                                         VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkMacOSSurfaceCreateInfoMVK(...)                                   JMP_VK_UTIL__CAST_S(VkMacOSSurfaceCreateInfoMVK) { .sType =                                       VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkDebugUtilsObjectNameInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkDebugUtilsObjectNameInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkDebugUtilsObjectTagInfoEXT(...)                                  JMP_VK_UTIL__CAST_S(VkDebugUtilsObjectTagInfoEXT) { .sType =                                     VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkDebugUtilsLabelEXT(...)                                          JMP_VK_UTIL__CAST_S(VkDebugUtilsLabelEXT) { .sType =                                               VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkDebugUtilsMessengerCallbackDataEXT(...)                          JMP_VK_UTIL__CAST_S(VkDebugUtilsMessengerCallbackDataEXT) { .sType =                             VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkDebugUtilsMessengerCreateInfoEXT(...)                            JMP_VK_UTIL__CAST_S(VkDebugUtilsMessengerCreateInfoEXT) { .sType =                               VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkAndroidHardwareBufferUsageANDROID(...)                           JMP_VK_UTIL__CAST_S(VkAndroidHardwareBufferUsageANDROID) { .sType =                               VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkAndroidHardwareBufferPropertiesANDROID(...)                      JMP_VK_UTIL__CAST_S(VkAndroidHardwareBufferPropertiesANDROID) { .sType =                          VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkAndroidHardwareBufferFormatPropertiesANDROID(...)                JMP_VK_UTIL__CAST_S(VkAndroidHardwareBufferFormatPropertiesANDROID) { .sType =                   VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkImportAndroidHardwareBufferInfoANDROID(...)                      JMP_VK_UTIL__CAST_S(VkImportAndroidHardwareBufferInfoANDROID) { .sType =                         VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkMemoryGetAndroidHardwareBufferInfoANDROID(...)                   JMP_VK_UTIL__CAST_S(VkMemoryGetAndroidHardwareBufferInfoANDROID) { .sType =                     VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkExternalFormatANDROID(...)                                       JMP_VK_UTIL__CAST_S(VkExternalFormatANDROID) { .sType =                                             VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkAndroidHardwareBufferFormatProperties2ANDROID(...)               JMP_VK_UTIL__CAST_S(VkAndroidHardwareBufferFormatProperties2ANDROID) { .sType =                 VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkSampleLocationsInfoEXT(...)                                      JMP_VK_UTIL__CAST_S(VkSampleLocationsInfoEXT) { .sType =                                           VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkRenderPassSampleLocationsBeginInfoEXT(...)                       JMP_VK_UTIL__CAST_S(VkRenderPassSampleLocationsBeginInfoEXT) { .sType =                         VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPipelineSampleLocationsStateCreateInfoEXT(...)                   JMP_VK_UTIL__CAST_S(VkPipelineSampleLocationsStateCreateInfoEXT) { .sType =                     VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceSampleLocationsPropertiesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSampleLocationsPropertiesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkMultisamplePropertiesEXT(...)                                    JMP_VK_UTIL__CAST_S(VkMultisamplePropertiesEXT) { .sType =                                          VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPipelineColorBlendAdvancedStateCreateInfoEXT(...)                JMP_VK_UTIL__CAST_S(VkPipelineColorBlendAdvancedStateCreateInfoEXT) { .sType =                 VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPipelineCoverageToColorStateCreateInfoNV(...)                    JMP_VK_UTIL__CAST_S(VkPipelineCoverageToColorStateCreateInfoNV) { .sType =                     VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkWriteDescriptorSetAccelerationStructureKHR(...)                  JMP_VK_UTIL__CAST_S(VkWriteDescriptorSetAccelerationStructureKHR) { .sType =                     VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkAccelerationStructureBuildGeometryInfoKHR(...)                   JMP_VK_UTIL__CAST_S(VkAccelerationStructureBuildGeometryInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkAccelerationStructureDeviceAddressInfoKHR(...)                   JMP_VK_UTIL__CAST_S(VkAccelerationStructureDeviceAddressInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkAccelerationStructureGeometryAabbsDataKHR(...)                   JMP_VK_UTIL__CAST_S(VkAccelerationStructureGeometryAabbsDataKHR) { .sType =                      VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkAccelerationStructureGeometryInstancesDataKHR(...)               JMP_VK_UTIL__CAST_S(VkAccelerationStructureGeometryInstancesDataKHR) { .sType =                  VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkAccelerationStructureGeometryTrianglesDataKHR(...)               JMP_VK_UTIL__CAST_S(VkAccelerationStructureGeometryTrianglesDataKHR) { .sType =                  VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkAccelerationStructureGeometryKHR(...)                            JMP_VK_UTIL__CAST_S(VkAccelerationStructureGeometryKHR) { .sType =                                 VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkAccelerationStructureVersionInfoKHR(...)                         JMP_VK_UTIL__CAST_S(VkAccelerationStructureVersionInfoKHR) { .sType =                             VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkCopyAccelerationStructureInfoKHR(...)                            JMP_VK_UTIL__CAST_S(VkCopyAccelerationStructureInfoKHR) { .sType =                                VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkCopyAccelerationStructureToMemoryInfoKHR(...)                    JMP_VK_UTIL__CAST_S(VkCopyAccelerationStructureToMemoryInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkCopyMemoryToAccelerationStructureInfoKHR(...)                    JMP_VK_UTIL__CAST_S(VkCopyMemoryToAccelerationStructureInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceAccelerationStructureFeaturesKHR(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAccelerationStructureFeaturesKHR) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceAccelerationStructurePropertiesKHR(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAccelerationStructurePropertiesKHR) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkAccelerationStructureCreateInfoKHR(...)                          JMP_VK_UTIL__CAST_S(VkAccelerationStructureCreateInfoKHR) { .sType =                              VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkAccelerationStructureBuildSizesInfoKHR(...)                      JMP_VK_UTIL__CAST_S(VkAccelerationStructureBuildSizesInfoKHR) { .sType =                         VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingPipelineFeaturesKHR) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingPipelinePropertiesKHR) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkRayTracingPipelineCreateInfoKHR(...)                             JMP_VK_UTIL__CAST_S(VkRayTracingPipelineCreateInfoKHR) { .sType =                                VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkRayTracingShaderGroupCreateInfoKHR(...)                          JMP_VK_UTIL__CAST_S(VkRayTracingShaderGroupCreateInfoKHR) { .sType =                            VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkRayTracingPipelineInterfaceCreateInfoKHR(...)                    JMP_VK_UTIL__CAST_S(VkRayTracingPipelineInterfaceCreateInfoKHR) { .sType =                      VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkPhysicalDeviceRayQueryFeaturesKHR(...)                           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayQueryFeaturesKHR) { .sType =                              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPipelineCoverageModulationStateCreateInfoNV(...)                 JMP_VK_UTIL__CAST_S(VkPipelineCoverageModulationStateCreateInfoNV) { .sType =                   VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkDrmFormatModifierPropertiesListEXT(...)                          JMP_VK_UTIL__CAST_S(VkDrmFormatModifierPropertiesListEXT) { .sType =                             VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageDrmFormatModifierInfoEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkImageDrmFormatModifierListCreateInfoEXT(...)                     JMP_VK_UTIL__CAST_S(VkImageDrmFormatModifierListCreateInfoEXT) { .sType =                      VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkImageDrmFormatModifierExplicitCreateInfoEXT(...)                 JMP_VK_UTIL__CAST_S(VkImageDrmFormatModifierExplicitCreateInfoEXT) { .sType =                  VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkImageDrmFormatModifierPropertiesEXT(...)                         JMP_VK_UTIL__CAST_S(VkImageDrmFormatModifierPropertiesEXT) { .sType =                            VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkDrmFormatModifierPropertiesList2EXT(...)                         JMP_VK_UTIL__CAST_S(VkDrmFormatModifierPropertiesList2EXT) { .sType =                           VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkValidationCacheCreateInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkValidationCacheCreateInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkShaderModuleValidationCacheCreateInfoEXT(...)                    JMP_VK_UTIL__CAST_S(VkShaderModuleValidationCacheCreateInfoEXT) { .sType =                      VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPipelineViewportShadingRateImageStateCreateInfoNV(...)           JMP_VK_UTIL__CAST_S(VkPipelineViewportShadingRateImageStateCreateInfoNV) { .sType =           VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceShadingRateImageFeaturesNV(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShadingRateImageFeaturesNV) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceShadingRateImagePropertiesNV(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShadingRateImagePropertiesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(...)          JMP_VK_UTIL__CAST_S(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV) { .sType =          VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkRayTracingPipelineCreateInfoNV(...)                              JMP_VK_UTIL__CAST_S(VkRayTracingPipelineCreateInfoNV) { .sType =                                 VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkAccelerationStructureCreateInfoNV(...)                           JMP_VK_UTIL__CAST_S(VkAccelerationStructureCreateInfoNV) { .sType =                               VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                                  jmp_VkGeometryNV(...)                                                  JMP_VK_UTIL__CAST_S(VkGeometryNV) { .sType =                                                         VK_STRUCTURE_TYPE_GEOMETRY_NV, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkGeometryTrianglesNV(...)                                         JMP_VK_UTIL__CAST_S(VkGeometryTrianglesNV) { .sType =                                               VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkGeometryAABBNV(...)                                              JMP_VK_UTIL__CAST_S(VkGeometryAABBNV) { .sType =                                                    VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkBindAccelerationStructureMemoryInfoNV(...)                       JMP_VK_UTIL__CAST_S(VkBindAccelerationStructureMemoryInfoNV) { .sType =                          VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkWriteDescriptorSetAccelerationStructureNV(...)                   JMP_VK_UTIL__CAST_S(VkWriteDescriptorSetAccelerationStructureNV) { .sType =                      VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkAccelerationStructureMemoryRequirementsInfoNV(...)               JMP_VK_UTIL__CAST_S(VkAccelerationStructureMemoryRequirementsInfoNV) { .sType =                  VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceRayTracingPropertiesNV(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingPropertiesNV) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkRayTracingShaderGroupCreateInfoNV(...)                           JMP_VK_UTIL__CAST_S(VkRayTracingShaderGroupCreateInfoNV) { .sType =                             VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkAccelerationStructureInfoNV(...)                                 JMP_VK_UTIL__CAST_S(VkAccelerationStructureInfoNV) { .sType =                                      VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(...)         JMP_VK_UTIL__CAST_S(VkPipelineRepresentativeFragmentTestStateCreateInfoNV) { .sType =          VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceImageViewImageFormatInfoEXT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageViewImageFormatInfoEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkFilterCubicImageViewImageFormatPropertiesEXT(...)                JMP_VK_UTIL__CAST_S(VkFilterCubicImageViewImageFormatPropertiesEXT) { .sType =                 VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkImportMemoryHostPointerInfoEXT(...)                              JMP_VK_UTIL__CAST_S(VkImportMemoryHostPointerInfoEXT) { .sType =                                 VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkMemoryHostPointerPropertiesEXT(...)                              JMP_VK_UTIL__CAST_S(VkMemoryHostPointerPropertiesEXT) { .sType =                                  VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalMemoryHostPropertiesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceShaderClockFeaturesKHR(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderClockFeaturesKHR) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPipelineCompilerControlCreateInfoAMD(...)                        JMP_VK_UTIL__CAST_S(VkPipelineCompilerControlCreateInfoAMD) { .sType =                           VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceShaderCorePropertiesAMD(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderCorePropertiesAMD) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkVideoDecodeH265CapabilitiesKHR(...)                              JMP_VK_UTIL__CAST_S(VkVideoDecodeH265CapabilitiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkVideoDecodeH265SessionParametersCreateInfoKHR(...)               JMP_VK_UTIL__CAST_S(VkVideoDecodeH265SessionParametersCreateInfoKHR) { .sType =                VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkVideoDecodeH265SessionParametersAddInfoKHR(...)                  JMP_VK_UTIL__CAST_S(VkVideoDecodeH265SessionParametersAddInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeH265ProfileInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeH265ProfileInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeH265PictureInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeH265PictureInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeH265DpbSlotInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeH265DpbSlotInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkDeviceQueueGlobalPriorityCreateInfoKHR(...)                      JMP_VK_UTIL__CAST_S(VkDeviceQueueGlobalPriorityCreateInfoKHR) { .sType =                        VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkQueueFamilyGlobalPriorityPropertiesKHR(...)                      JMP_VK_UTIL__CAST_S(VkQueueFamilyGlobalPriorityPropertiesKHR) { .sType =                         VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkDeviceMemoryOverallocationCreateInfoAMD(...)                     JMP_VK_UTIL__CAST_S(VkDeviceMemoryOverallocationCreateInfoAMD) { .sType =                        VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkPresentFrameTokenGGP(...)                                        JMP_VK_UTIL__CAST_S(VkPresentFrameTokenGGP) { .sType =                                             VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPhysicalDeviceMeshShaderFeaturesNV(...)                          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMeshShaderFeaturesNV) { .sType =                             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceMeshShaderPropertiesNV(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMeshShaderPropertiesNV) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceShaderImageFootprintFeaturesNV(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderImageFootprintFeaturesNV) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPipelineViewportExclusiveScissorStateCreateInfoNV(...)           JMP_VK_UTIL__CAST_S(VkPipelineViewportExclusiveScissorStateCreateInfoNV) { .sType =            VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceExclusiveScissorFeaturesNV(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExclusiveScissorFeaturesNV) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkCheckpointDataNV(...)                                            JMP_VK_UTIL__CAST_S(VkCheckpointDataNV) { .sType =                                                  VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkQueueFamilyCheckpointPropertiesNV(...)                           JMP_VK_UTIL__CAST_S(VkQueueFamilyCheckpointPropertiesNV) { .sType =                               VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkQueryPoolPerformanceQueryCreateInfoINTEL(...)                    JMP_VK_UTIL__CAST_S(VkQueryPoolPerformanceQueryCreateInfoINTEL) { .sType =                      VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkInitializePerformanceApiInfoINTEL(...)                           JMP_VK_UTIL__CAST_S(VkInitializePerformanceApiInfoINTEL) { .sType =                               VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkPerformanceMarkerInfoINTEL(...)                                  JMP_VK_UTIL__CAST_S(VkPerformanceMarkerInfoINTEL) { .sType =                                       VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPerformanceStreamMarkerInfoINTEL(...)                            JMP_VK_UTIL__CAST_S(VkPerformanceStreamMarkerInfoINTEL) { .sType =                                VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkPerformanceOverrideInfoINTEL(...)                                JMP_VK_UTIL__CAST_S(VkPerformanceOverrideInfoINTEL) { .sType =                                     VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPerformanceConfigurationAcquireInfoINTEL(...)                    JMP_VK_UTIL__CAST_S(VkPerformanceConfigurationAcquireInfoINTEL) { .sType =                        VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDevicePCIBusInfoPropertiesEXT(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDevicePCIBusInfoPropertiesEXT) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkDisplayNativeHdrSurfaceCapabilitiesAMD(...)                      JMP_VK_UTIL__CAST_S(VkDisplayNativeHdrSurfaceCapabilitiesAMD) { .sType =                         VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkSwapchainDisplayNativeHdrCreateInfoAMD(...)                      JMP_VK_UTIL__CAST_S(VkSwapchainDisplayNativeHdrCreateInfoAMD) { .sType =                        VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkImagePipeSurfaceCreateInfoFUCHSIA(...)                           JMP_VK_UTIL__CAST_S(VkImagePipeSurfaceCreateInfoFUCHSIA) { .sType =                               VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkMetalSurfaceCreateInfoEXT(...)                                   JMP_VK_UTIL__CAST_S(VkMetalSurfaceCreateInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentDensityMapFeaturesEXT) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentDensityMapPropertiesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkRenderPassFragmentDensityMapCreateInfoEXT(...)                   JMP_VK_UTIL__CAST_S(VkRenderPassFragmentDensityMapCreateInfoEXT) { .sType =                    VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkFragmentShadingRateAttachmentInfoKHR(...)                        JMP_VK_UTIL__CAST_S(VkFragmentShadingRateAttachmentInfoKHR) { .sType =                           VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPipelineFragmentShadingRateStateCreateInfoKHR(...)               JMP_VK_UTIL__CAST_S(VkPipelineFragmentShadingRateStateCreateInfoKHR) { .sType =                VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShadingRatePropertiesKHR) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShadingRateFeaturesKHR) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceFragmentShadingRateKHR(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShadingRateKHR) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceShaderCoreProperties2AMD(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderCoreProperties2AMD) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceCoherentMemoryFeaturesAMD(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCoherentMemoryFeaturesAMD) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkRenderingAttachmentLocationInfoKHR(...)                          JMP_VK_UTIL__CAST_S(VkRenderingAttachmentLocationInfoKHR) { .sType =                              VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkRenderingInputAttachmentIndexInfoKHR(...)                        JMP_VK_UTIL__CAST_S(VkRenderingInputAttachmentIndexInfoKHR) { .sType =                           VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceShaderQuadControlFeaturesKHR(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderQuadControlFeaturesKHR) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceMemoryBudgetPropertiesEXT(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMemoryBudgetPropertiesEXT) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceMemoryPriorityFeaturesEXT(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMemoryPriorityFeaturesEXT) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkMemoryPriorityAllocateInfoEXT(...)                               JMP_VK_UTIL__CAST_S(VkMemoryPriorityAllocateInfoEXT) { .sType =                                   VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkSurfaceProtectedCapabilitiesKHR(...)                             JMP_VK_UTIL__CAST_S(VkSurfaceProtectedCapabilitiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define    jmp_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(...)    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV) { .sType =     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkBufferDeviceAddressCreateInfoEXT(...)                            JMP_VK_UTIL__CAST_S(VkBufferDeviceAddressCreateInfoEXT) { .sType =                               VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkValidationFeaturesEXT(...)                                       JMP_VK_UTIL__CAST_S(VkValidationFeaturesEXT) { .sType =                                             VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDevicePresentWaitFeaturesKHR(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDevicePresentWaitFeaturesKHR) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceCooperativeMatrixFeaturesNV(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCooperativeMatrixFeaturesNV) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkCooperativeMatrixPropertiesNV(...)                               JMP_VK_UTIL__CAST_S(VkCooperativeMatrixPropertiesNV) { .sType =                                    VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceCooperativeMatrixPropertiesNV(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCooperativeMatrixPropertiesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceCoverageReductionModeFeaturesNV(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCoverageReductionModeFeaturesNV) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPipelineCoverageReductionStateCreateInfoNV(...)                  JMP_VK_UTIL__CAST_S(VkPipelineCoverageReductionStateCreateInfoNV) { .sType =                    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkFramebufferMixedSamplesCombinationNV(...)                        JMP_VK_UTIL__CAST_S(VkFramebufferMixedSamplesCombinationNV) { .sType =                            VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceProvokingVertexFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceProvokingVertexFeaturesEXT) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define      jmp_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(...)      JMP_VK_UTIL__CAST_S(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT) { .sType =       VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceProvokingVertexPropertiesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceProvokingVertexPropertiesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkSurfaceFullScreenExclusiveInfoEXT(...)                           JMP_VK_UTIL__CAST_S(VkSurfaceFullScreenExclusiveInfoEXT) { .sType =                              VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkSurfaceCapabilitiesFullScreenExclusiveEXT(...)                   JMP_VK_UTIL__CAST_S(VkSurfaceCapabilitiesFullScreenExclusiveEXT) { .sType =                      VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkSurfaceFullScreenExclusiveWin32InfoEXT(...)                      JMP_VK_UTIL__CAST_S(VkSurfaceFullScreenExclusiveWin32InfoEXT) { .sType =                        VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkHeadlessSurfaceCreateInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkHeadlessSurfaceCreateInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR) { .sType =         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                             jmp_VkPipelineInfoKHR(...)                                             JMP_VK_UTIL__CAST_S(VkPipelineInfoKHR) { .sType =                                                   VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPipelineExecutablePropertiesKHR(...)                             JMP_VK_UTIL__CAST_S(VkPipelineExecutablePropertiesKHR) { .sType =                                  VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkPipelineExecutableInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkPipelineExecutableInfoKHR) { .sType =                                        VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPipelineExecutableStatisticKHR(...)                              JMP_VK_UTIL__CAST_S(VkPipelineExecutableStatisticKHR) { .sType =                                   VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPipelineExecutableInternalRepresentationKHR(...)                 JMP_VK_UTIL__CAST_S(VkPipelineExecutableInternalRepresentationKHR) { .sType =                     VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceHostImageCopyFeaturesEXT(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceHostImageCopyFeaturesEXT) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceHostImageCopyPropertiesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceHostImageCopyPropertiesEXT) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkMemoryToImageCopyEXT(...)                                        JMP_VK_UTIL__CAST_S(VkMemoryToImageCopyEXT) { .sType =                                            VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkImageToMemoryCopyEXT(...)                                        JMP_VK_UTIL__CAST_S(VkImageToMemoryCopyEXT) { .sType =                                            VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkCopyImageToMemoryInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkCopyImageToMemoryInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkCopyMemoryToImageInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkCopyMemoryToImageInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkHostImageLayoutTransitionInfoEXT(...)                            JMP_VK_UTIL__CAST_S(VkHostImageLayoutTransitionInfoEXT) { .sType =                               VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkCopyImageToImageInfoEXT(...)                                     JMP_VK_UTIL__CAST_S(VkCopyImageToImageInfoEXT) { .sType =                                        VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkSubresourceHostMemcpySizeEXT(...)                                JMP_VK_UTIL__CAST_S(VkSubresourceHostMemcpySizeEXT) { .sType =                                    VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkHostImageCopyDevicePerformanceQueryEXT(...)                      JMP_VK_UTIL__CAST_S(VkHostImageCopyDevicePerformanceQueryEXT) { .sType =                        VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkMemoryMapInfoKHR(...)                                            JMP_VK_UTIL__CAST_S(VkMemoryMapInfoKHR) { .sType =                                                 VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkMemoryUnmapInfoKHR(...)                                          JMP_VK_UTIL__CAST_S(VkMemoryUnmapInfoKHR) { .sType =                                               VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceMapMemoryPlacedFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMapMemoryPlacedFeaturesEXT) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceMapMemoryPlacedPropertiesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMapMemoryPlacedPropertiesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkMemoryMapPlacedInfoEXT(...)                                      JMP_VK_UTIL__CAST_S(VkMemoryMapPlacedInfoEXT) { .sType =                                          VK_STRUCTURE_TYPE_MEMORY_MAP_PLACED_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkSurfacePresentModeEXT(...)                                       JMP_VK_UTIL__CAST_S(VkSurfacePresentModeEXT) { .sType =                                            VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkSurfacePresentScalingCapabilitiesEXT(...)                        JMP_VK_UTIL__CAST_S(VkSurfacePresentScalingCapabilitiesEXT) { .sType =                            VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkSurfacePresentModeCompatibilityEXT(...)                          JMP_VK_UTIL__CAST_S(VkSurfacePresentModeCompatibilityEXT) { .sType =                              VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkSwapchainPresentFenceInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkSwapchainPresentFenceInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkSwapchainPresentModesCreateInfoEXT(...)                          JMP_VK_UTIL__CAST_S(VkSwapchainPresentModesCreateInfoEXT) { .sType =                             VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkSwapchainPresentModeInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkSwapchainPresentModeInfoEXT) { .sType =                                     VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkSwapchainPresentScalingCreateInfoEXT(...)                        JMP_VK_UTIL__CAST_S(VkSwapchainPresentScalingCreateInfoEXT) { .sType =                           VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkReleaseSwapchainImagesInfoEXT(...)                               JMP_VK_UTIL__CAST_S(VkReleaseSwapchainImagesInfoEXT) { .sType =                                   VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkGraphicsShaderGroupCreateInfoNV(...)                             JMP_VK_UTIL__CAST_S(VkGraphicsShaderGroupCreateInfoNV) { .sType =                                VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkGraphicsPipelineShaderGroupsCreateInfoNV(...)                    JMP_VK_UTIL__CAST_S(VkGraphicsPipelineShaderGroupsCreateInfoNV) { .sType =                      VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkIndirectCommandsLayoutTokenNV(...)                               JMP_VK_UTIL__CAST_S(VkIndirectCommandsLayoutTokenNV) { .sType =                                   VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkIndirectCommandsLayoutCreateInfoNV(...)                          JMP_VK_UTIL__CAST_S(VkIndirectCommandsLayoutCreateInfoNV) { .sType =                             VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkGeneratedCommandsInfoNV(...)                                     JMP_VK_UTIL__CAST_S(VkGeneratedCommandsInfoNV) { .sType =                                          VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkGeneratedCommandsMemoryRequirementsInfoNV(...)                   JMP_VK_UTIL__CAST_S(VkGeneratedCommandsMemoryRequirementsInfoNV) { .sType =                      VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceInheritedViewportScissorFeaturesNV) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkCommandBufferInheritanceViewportScissorInfoNV(...)               JMP_VK_UTIL__CAST_S(VkCommandBufferInheritanceViewportScissorInfoNV) { .sType =                 VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(...)         JMP_VK_UTIL__CAST_S(VkCommandBufferInheritanceRenderPassTransformInfoQCOM) { .sType =          VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkRenderPassTransformBeginInfoQCOM(...)                            JMP_VK_UTIL__CAST_S(VkRenderPassTransformBeginInfoQCOM) { .sType =                               VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceDepthBiasControlFeaturesEXT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDepthBiasControlFeaturesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkDepthBiasInfoEXT(...)                                            JMP_VK_UTIL__CAST_S(VkDepthBiasInfoEXT) { .sType =                                                 VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkDepthBiasRepresentationInfoEXT(...)                              JMP_VK_UTIL__CAST_S(VkDepthBiasRepresentationInfoEXT) { .sType =                                  VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkDeviceDeviceMemoryReportCreateInfoEXT(...)                       JMP_VK_UTIL__CAST_S(VkDeviceDeviceMemoryReportCreateInfoEXT) { .sType =                         VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkDeviceMemoryReportCallbackDataEXT(...)                           JMP_VK_UTIL__CAST_S(VkDeviceMemoryReportCallbackDataEXT) { .sType =                              VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceRobustness2FeaturesEXT(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRobustness2FeaturesEXT) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceRobustness2PropertiesEXT(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRobustness2PropertiesEXT) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkSamplerCustomBorderColorCreateInfoEXT(...)                       JMP_VK_UTIL__CAST_S(VkSamplerCustomBorderColorCreateInfoEXT) { .sType =                         VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceCustomBorderColorPropertiesEXT(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCustomBorderColorPropertiesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceCustomBorderColorFeaturesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCustomBorderColorFeaturesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkPipelineLibraryCreateInfoKHR(...)                                JMP_VK_UTIL__CAST_S(VkPipelineLibraryCreateInfoKHR) { .sType =                                    VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDevicePresentBarrierFeaturesNV(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDevicePresentBarrierFeaturesNV) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkSurfaceCapabilitiesPresentBarrierNV(...)                         JMP_VK_UTIL__CAST_S(VkSurfaceCapabilitiesPresentBarrierNV) { .sType =                             VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkSwapchainPresentBarrierCreateInfoNV(...)                         JMP_VK_UTIL__CAST_S(VkSwapchainPresentBarrierCreateInfoNV) { .sType =                            VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                                jmp_VkPresentIdKHR(...)                                                JMP_VK_UTIL__CAST_S(VkPresentIdKHR) { .sType =                                                      VK_STRUCTURE_TYPE_PRESENT_ID_KHR, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPhysicalDevicePresentIdFeaturesKHR(...)                          JMP_VK_UTIL__CAST_S(VkPhysicalDevicePresentIdFeaturesKHR) { .sType =                             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkVideoEncodeInfoKHR(...)                                          JMP_VK_UTIL__CAST_S(VkVideoEncodeInfoKHR) { .sType =                                               VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoEncodeRateControlInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoEncodeRateControlInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkVideoEncodeRateControlLayerInfoKHR(...)                          JMP_VK_UTIL__CAST_S(VkVideoEncodeRateControlLayerInfoKHR) { .sType =                            VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkVideoEncodeCapabilitiesKHR(...)                                  JMP_VK_UTIL__CAST_S(VkVideoEncodeCapabilitiesKHR) { .sType =                                       VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkVideoEncodeUsageInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkVideoEncodeUsageInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkQueryPoolVideoEncodeFeedbackCreateInfoKHR(...)                   JMP_VK_UTIL__CAST_S(VkQueryPoolVideoEncodeFeedbackCreateInfoKHR) { .sType =                    VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkVideoEncodeQualityLevelPropertiesKHR(...)                        JMP_VK_UTIL__CAST_S(VkVideoEncodeQualityLevelPropertiesKHR) { .sType =                           VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkVideoEncodeQualityLevelInfoKHR(...)                              JMP_VK_UTIL__CAST_S(VkVideoEncodeQualityLevelInfoKHR) { .sType =                                 VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkVideoEncodeSessionParametersGetInfoKHR(...)                      JMP_VK_UTIL__CAST_S(VkVideoEncodeSessionParametersGetInfoKHR) { .sType =                        VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkVideoEncodeSessionParametersFeedbackInfoKHR(...)                 JMP_VK_UTIL__CAST_S(VkVideoEncodeSessionParametersFeedbackInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDiagnosticsConfigFeaturesNV) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkDeviceDiagnosticsConfigCreateInfoNV(...)                         JMP_VK_UTIL__CAST_S(VkDeviceDiagnosticsConfigCreateInfoNV) { .sType =                            VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkCudaModuleCreateInfoNV(...)                                      JMP_VK_UTIL__CAST_S(VkCudaModuleCreateInfoNV) { .sType =                                          VK_STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkCudaFunctionCreateInfoNV(...)                                    JMP_VK_UTIL__CAST_S(VkCudaFunctionCreateInfoNV) { .sType =                                        VK_STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkCudaLaunchInfoNV(...)                                            JMP_VK_UTIL__CAST_S(VkCudaLaunchInfoNV) { .sType =                                                 VK_STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceCudaKernelLaunchFeaturesNV(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCudaKernelLaunchFeaturesNV) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceCudaKernelLaunchPropertiesNV(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCudaKernelLaunchPropertiesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkQueryLowLatencySupportNV(...)                                    JMP_VK_UTIL__CAST_S(VkQueryLowLatencySupportNV) { .sType =                                        VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkExportMetalObjectCreateInfoEXT(...)                              JMP_VK_UTIL__CAST_S(VkExportMetalObjectCreateInfoEXT) { .sType =                                 VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkExportMetalObjectsInfoEXT(...)                                   JMP_VK_UTIL__CAST_S(VkExportMetalObjectsInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkExportMetalDeviceInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkExportMetalDeviceInfoEXT) { .sType =                                        VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkExportMetalCommandQueueInfoEXT(...)                              JMP_VK_UTIL__CAST_S(VkExportMetalCommandQueueInfoEXT) { .sType =                                 VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkExportMetalBufferInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkExportMetalBufferInfoEXT) { .sType =                                        VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkImportMetalBufferInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkImportMetalBufferInfoEXT) { .sType =                                        VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkExportMetalTextureInfoEXT(...)                                   JMP_VK_UTIL__CAST_S(VkExportMetalTextureInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkImportMetalTextureInfoEXT(...)                                   JMP_VK_UTIL__CAST_S(VkImportMetalTextureInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkExportMetalIOSurfaceInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkExportMetalIOSurfaceInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkImportMetalIOSurfaceInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkImportMetalIOSurfaceInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkExportMetalSharedEventInfoEXT(...)                               JMP_VK_UTIL__CAST_S(VkExportMetalSharedEventInfoEXT) { .sType =                                  VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkImportMetalSharedEventInfoEXT(...)                               JMP_VK_UTIL__CAST_S(VkImportMetalSharedEventInfoEXT) { .sType =                                  VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkQueueFamilyCheckpointProperties2NV(...)                          JMP_VK_UTIL__CAST_S(VkQueueFamilyCheckpointProperties2NV) { .sType =                             VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkCheckpointData2NV(...)                                           JMP_VK_UTIL__CAST_S(VkCheckpointData2NV) { .sType =                                                VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceDescriptorBufferPropertiesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorBufferPropertiesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT) { .sType =        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceDescriptorBufferFeaturesEXT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorBufferFeaturesEXT) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkDescriptorAddressInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkDescriptorAddressInfoEXT) { .sType =                                         VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkDescriptorGetInfoEXT(...)                                        JMP_VK_UTIL__CAST_S(VkDescriptorGetInfoEXT) { .sType =                                             VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkBufferCaptureDescriptorDataInfoEXT(...)                          JMP_VK_UTIL__CAST_S(VkBufferCaptureDescriptorDataInfoEXT) { .sType =                             VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkImageCaptureDescriptorDataInfoEXT(...)                           JMP_VK_UTIL__CAST_S(VkImageCaptureDescriptorDataInfoEXT) { .sType =                              VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkImageViewCaptureDescriptorDataInfoEXT(...)                       JMP_VK_UTIL__CAST_S(VkImageViewCaptureDescriptorDataInfoEXT) { .sType =                         VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkSamplerCaptureDescriptorDataInfoEXT(...)                         JMP_VK_UTIL__CAST_S(VkSamplerCaptureDescriptorDataInfoEXT) { .sType =                            VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkOpaqueCaptureDescriptorDataCreateInfoEXT(...)                    JMP_VK_UTIL__CAST_S(VkOpaqueCaptureDescriptorDataCreateInfoEXT) { .sType =                      VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkDescriptorBufferBindingInfoEXT(...)                              JMP_VK_UTIL__CAST_S(VkDescriptorBufferBindingInfoEXT) { .sType =                                  VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(...)        JMP_VK_UTIL__CAST_S(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT) { .sType =         VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkAccelerationStructureCaptureDescriptorDataInfoEXT(...)           JMP_VK_UTIL__CAST_S(VkAccelerationStructureCaptureDescriptorDataInfoEXT) { .sType =             VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkGraphicsPipelineLibraryCreateInfoEXT(...)                        JMP_VK_UTIL__CAST_S(VkGraphicsPipelineLibraryCreateInfoEXT) { .sType =                           VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define    jmp_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(...)    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD) { .sType =   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define   jmp_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(...)   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR) { .sType =   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(...)            JMP_VK_UTIL__CAST_S(VkPipelineFragmentShadingRateEnumStateCreateInfoNV) { .sType =            VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkAccelerationStructureGeometryMotionTrianglesDataNV(...)          JMP_VK_UTIL__CAST_S(VkAccelerationStructureGeometryMotionTrianglesDataNV) { .sType =            VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkAccelerationStructureMotionInfoNV(...)                           JMP_VK_UTIL__CAST_S(VkAccelerationStructureMotionInfoNV) { .sType =                               VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPhysicalDeviceMeshShaderFeaturesEXT(...)                         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMeshShaderFeaturesEXT) { .sType =                            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceMeshShaderPropertiesEXT(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMeshShaderPropertiesEXT) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkCopyCommandTransformInfoQCOM(...)                                JMP_VK_UTIL__CAST_S(VkCopyCommandTransformInfoQCOM) { .sType =                                    VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define      jmp_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(...)      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR) { .sType =       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceImageCompressionControlFeaturesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageCompressionControlFeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkImageCompressionControlEXT(...)                                  JMP_VK_UTIL__CAST_S(VkImageCompressionControlEXT) { .sType =                                       VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkImageCompressionPropertiesEXT(...)                               JMP_VK_UTIL__CAST_S(VkImageCompressionPropertiesEXT) { .sType =                                    VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT) { .sType =        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDevice4444FormatsFeaturesEXT(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDevice4444FormatsFeaturesEXT) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceFaultFeaturesEXT(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFaultFeaturesEXT) { .sType =                                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkDeviceFaultCountsEXT(...)                                        JMP_VK_UTIL__CAST_S(VkDeviceFaultCountsEXT) { .sType =                                             VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkDeviceFaultInfoEXT(...)                                          JMP_VK_UTIL__CAST_S(VkDeviceFaultInfoEXT) { .sType =                                               VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkDirectFBSurfaceCreateInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkDirectFBSurfaceCreateInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkVertexInputBindingDescription2EXT(...)                           JMP_VK_UTIL__CAST_S(VkVertexInputBindingDescription2EXT) { .sType =                              VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkVertexInputAttributeDescription2EXT(...)                         JMP_VK_UTIL__CAST_S(VkVertexInputAttributeDescription2EXT) { .sType =                            VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkPhysicalDeviceDrmPropertiesEXT(...)                              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDrmPropertiesEXT) { .sType =                                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceAddressBindingReportFeaturesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAddressBindingReportFeaturesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkDeviceAddressBindingCallbackDataEXT(...)                         JMP_VK_UTIL__CAST_S(VkDeviceAddressBindingCallbackDataEXT) { .sType =                            VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceDepthClipControlFeaturesEXT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDepthClipControlFeaturesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPipelineViewportDepthClipControlCreateInfoEXT(...)               JMP_VK_UTIL__CAST_S(VkPipelineViewportDepthClipControlCreateInfoEXT) { .sType =                VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT) { .sType =        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkImportMemoryZirconHandleInfoFUCHSIA(...)                         JMP_VK_UTIL__CAST_S(VkImportMemoryZirconHandleInfoFUCHSIA) { .sType =                            VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkMemoryZirconHandlePropertiesFUCHSIA(...)                         JMP_VK_UTIL__CAST_S(VkMemoryZirconHandlePropertiesFUCHSIA) { .sType =                             VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkMemoryGetZirconHandleInfoFUCHSIA(...)                            JMP_VK_UTIL__CAST_S(VkMemoryGetZirconHandleInfoFUCHSIA) { .sType =                               VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkImportSemaphoreZirconHandleInfoFUCHSIA(...)                      JMP_VK_UTIL__CAST_S(VkImportSemaphoreZirconHandleInfoFUCHSIA) { .sType =                         VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkSemaphoreGetZirconHandleInfoFUCHSIA(...)                         JMP_VK_UTIL__CAST_S(VkSemaphoreGetZirconHandleInfoFUCHSIA) { .sType =                            VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkBufferCollectionCreateInfoFUCHSIA(...)                           JMP_VK_UTIL__CAST_S(VkBufferCollectionCreateInfoFUCHSIA) { .sType =                               VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkImportMemoryBufferCollectionFUCHSIA(...)                         JMP_VK_UTIL__CAST_S(VkImportMemoryBufferCollectionFUCHSIA) { .sType =                             VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkBufferCollectionImageCreateInfoFUCHSIA(...)                      JMP_VK_UTIL__CAST_S(VkBufferCollectionImageCreateInfoFUCHSIA) { .sType =                         VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkBufferCollectionPropertiesFUCHSIA(...)                           JMP_VK_UTIL__CAST_S(VkBufferCollectionPropertiesFUCHSIA) { .sType =                                VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkBufferConstraintsInfoFUCHSIA(...)                                JMP_VK_UTIL__CAST_S(VkBufferConstraintsInfoFUCHSIA) { .sType =                                     VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkBufferCollectionBufferCreateInfoFUCHSIA(...)                     JMP_VK_UTIL__CAST_S(VkBufferCollectionBufferCreateInfoFUCHSIA) { .sType =                        VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkImageConstraintsInfoFUCHSIA(...)                                 JMP_VK_UTIL__CAST_S(VkImageConstraintsInfoFUCHSIA) { .sType =                                      VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkImageFormatConstraintsInfoFUCHSIA(...)                           JMP_VK_UTIL__CAST_S(VkImageFormatConstraintsInfoFUCHSIA) { .sType =                               VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkSysmemColorSpaceFUCHSIA(...)                                     JMP_VK_UTIL__CAST_S(VkSysmemColorSpaceFUCHSIA) { .sType =                                          VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkBufferCollectionConstraintsInfoFUCHSIA(...)                      JMP_VK_UTIL__CAST_S(VkBufferCollectionConstraintsInfoFUCHSIA) { .sType =                          VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkSubpassShadingPipelineCreateInfoHUAWEI(...)                      JMP_VK_UTIL__CAST_S(VkSubpassShadingPipelineCreateInfoHUAWEI) { .sType =                         VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkMemoryGetRemoteAddressInfoNV(...)                                JMP_VK_UTIL__CAST_S(VkMemoryGetRemoteAddressInfoNV) { .sType =                                   VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPipelinePropertiesIdentifierEXT(...)                             JMP_VK_UTIL__CAST_S(VkPipelinePropertiesIdentifierEXT) { .sType =                                  VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDevicePipelinePropertiesFeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelinePropertiesFeaturesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceFrameBoundaryFeaturesEXT(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFrameBoundaryFeaturesEXT) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                            jmp_VkFrameBoundaryEXT(...)                                            JMP_VK_UTIL__CAST_S(VkFrameBoundaryEXT) { .sType =                                                  VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT, .pNext = NULL, __VA_ARGS__ }
#define  jmp_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(...)  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT) { .sType =  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkSubpassResolvePerformanceQueryEXT(...)                           JMP_VK_UTIL__CAST_S(VkSubpassResolvePerformanceQueryEXT) { .sType =                               VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkMultisampledRenderToSingleSampledInfoEXT(...)                    JMP_VK_UTIL__CAST_S(VkMultisampledRenderToSingleSampledInfoEXT) { .sType =                      VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkScreenSurfaceCreateInfoQNX(...)                                  JMP_VK_UTIL__CAST_S(VkScreenSurfaceCreateInfoQNX) { .sType =                                      VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceColorWriteEnableFeaturesEXT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceColorWriteEnableFeaturesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkPipelineColorWriteCreateInfoEXT(...)                             JMP_VK_UTIL__CAST_S(VkPipelineColorWriteCreateInfoEXT) { .sType =                                VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceImageViewMinLodFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageViewMinLodFeaturesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkImageViewMinLodCreateInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkImageViewMinLodCreateInfoEXT) { .sType =                                  VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkPhysicalDeviceMultiDrawFeaturesEXT(...)                          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiDrawFeaturesEXT) { .sType =                             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceMultiDrawPropertiesEXT(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiDrawPropertiesEXT) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceShaderTileImageFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderTileImageFeaturesEXT) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceShaderTileImagePropertiesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderTileImagePropertiesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkMicromapBuildInfoEXT(...)                                        JMP_VK_UTIL__CAST_S(VkMicromapBuildInfoEXT) { .sType =                                             VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkMicromapVersionInfoEXT(...)                                      JMP_VK_UTIL__CAST_S(VkMicromapVersionInfoEXT) { .sType =                                           VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkCopyMicromapInfoEXT(...)                                         JMP_VK_UTIL__CAST_S(VkCopyMicromapInfoEXT) { .sType =                                              VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkCopyMicromapToMemoryInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkCopyMicromapToMemoryInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkCopyMemoryToMicromapInfoEXT(...)                                 JMP_VK_UTIL__CAST_S(VkCopyMemoryToMicromapInfoEXT) { .sType =                                    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceOpacityMicromapFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceOpacityMicromapFeaturesEXT) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceOpacityMicromapPropertiesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceOpacityMicromapPropertiesEXT) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkMicromapCreateInfoEXT(...)                                       JMP_VK_UTIL__CAST_S(VkMicromapCreateInfoEXT) { .sType =                                            VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkMicromapBuildSizesInfoEXT(...)                                   JMP_VK_UTIL__CAST_S(VkMicromapBuildSizesInfoEXT) { .sType =                                       VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkAccelerationStructureTrianglesOpacityMicromapEXT(...)            JMP_VK_UTIL__CAST_S(VkAccelerationStructureTrianglesOpacityMicromapEXT) { .sType =               VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkSamplerBorderColorComponentMappingCreateInfoEXT(...)             JMP_VK_UTIL__CAST_S(VkSamplerBorderColorComponentMappingCreateInfoEXT) { .sType =              VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceShaderCorePropertiesARM(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderCorePropertiesARM) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkDeviceQueueShaderCoreControlCreateInfoARM(...)                   JMP_VK_UTIL__CAST_S(VkDeviceQueueShaderCoreControlCreateInfoARM) { .sType =                    VK_STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceSchedulingControlsFeaturesARM(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSchedulingControlsFeaturesARM) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceSchedulingControlsPropertiesARM(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSchedulingControlsPropertiesARM) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkImageViewSlicedCreateInfoEXT(...)                                JMP_VK_UTIL__CAST_S(VkImageViewSlicedCreateInfoEXT) { .sType =                                   VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkDescriptorSetBindingReferenceVALVE(...)                          JMP_VK_UTIL__CAST_S(VkDescriptorSetBindingReferenceVALVE) { .sType =                              VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkDescriptorSetLayoutHostMappingInfoVALVE(...)                     JMP_VK_UTIL__CAST_S(VkDescriptorSetLayoutHostMappingInfoVALVE) { .sType =                       VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceRenderPassStripedFeaturesARM(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRenderPassStripedFeaturesARM) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceRenderPassStripedPropertiesARM(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRenderPassStripedPropertiesARM) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkRenderPassStripeBeginInfoARM(...)                                JMP_VK_UTIL__CAST_S(VkRenderPassStripeBeginInfoARM) { .sType =                                   VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkRenderPassStripeInfoARM(...)                                     JMP_VK_UTIL__CAST_S(VkRenderPassStripeInfoARM) { .sType =                                         VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkRenderPassStripeSubmitInfoARM(...)                               JMP_VK_UTIL__CAST_S(VkRenderPassStripeSubmitInfoARM) { .sType =                                  VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM) { .sType =         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(...)                  JMP_VK_UTIL__CAST_S(VkSubpassFragmentDensityMapOffsetEndInfoQCOM) { .sType =                   VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceMemoryDecompressionFeaturesNV(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMemoryDecompressionFeaturesNV) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceMemoryDecompressionPropertiesNV(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMemoryDecompressionPropertiesNV) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define      jmp_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(...)      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV) { .sType =       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkComputePipelineIndirectBufferInfoNV(...)                         JMP_VK_UTIL__CAST_S(VkComputePipelineIndirectBufferInfoNV) { .sType =                            VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPipelineIndirectDeviceAddressInfoNV(...)                         JMP_VK_UTIL__CAST_S(VkPipelineIndirectDeviceAddressInfoNV) { .sType =                            VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLinearColorAttachmentFeaturesNV) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define   jmp_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(...)   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT) { .sType =    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceImageProcessingFeaturesQCOM(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageProcessingFeaturesQCOM) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceImageProcessingPropertiesQCOM(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageProcessingPropertiesQCOM) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkImageViewSampleWeightCreateInfoQCOM(...)                         JMP_VK_UTIL__CAST_S(VkImageViewSampleWeightCreateInfoQCOM) { .sType =                           VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceNestedCommandBufferFeaturesEXT(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceNestedCommandBufferFeaturesEXT) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceNestedCommandBufferPropertiesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceNestedCommandBufferPropertiesEXT) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkExternalMemoryAcquireUnmodifiedEXT(...)                          JMP_VK_UTIL__CAST_S(VkExternalMemoryAcquireUnmodifiedEXT) { .sType =                              VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkRenderPassCreationControlEXT(...)                                JMP_VK_UTIL__CAST_S(VkRenderPassCreationControlEXT) { .sType =                                    VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkRenderPassCreationFeedbackCreateInfoEXT(...)                     JMP_VK_UTIL__CAST_S(VkRenderPassCreationFeedbackCreateInfoEXT) { .sType =                       VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkRenderPassSubpassFeedbackCreateInfoEXT(...)                      JMP_VK_UTIL__CAST_S(VkRenderPassSubpassFeedbackCreateInfoEXT) { .sType =                        VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkDirectDriverLoadingInfoLUNARG(...)                               JMP_VK_UTIL__CAST_S(VkDirectDriverLoadingInfoLUNARG) { .sType =                                   VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkDirectDriverLoadingListLUNARG(...)                               JMP_VK_UTIL__CAST_S(VkDirectDriverLoadingListLUNARG) { .sType =                                   VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(...)            JMP_VK_UTIL__CAST_S(VkPipelineShaderStageModuleIdentifierCreateInfoEXT) { .sType =             VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkShaderModuleIdentifierEXT(...)                                   JMP_VK_UTIL__CAST_S(VkShaderModuleIdentifierEXT) { .sType =                                        VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT, .pNext = NULL, __VA_ARGS__ }
#define jmp_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(...) JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT) { .sType =  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkPhysicalDeviceOpticalFlowFeaturesNV(...)                         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceOpticalFlowFeaturesNV) { .sType =                            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceOpticalFlowPropertiesNV(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceOpticalFlowPropertiesNV) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkOpticalFlowImageFormatInfoNV(...)                                JMP_VK_UTIL__CAST_S(VkOpticalFlowImageFormatInfoNV) { .sType =                                   VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkOpticalFlowImageFormatPropertiesNV(...)                          JMP_VK_UTIL__CAST_S(VkOpticalFlowImageFormatPropertiesNV) { .sType =                             VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkOpticalFlowSessionCreateInfoNV(...)                              JMP_VK_UTIL__CAST_S(VkOpticalFlowSessionCreateInfoNV) { .sType =                                 VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkOpticalFlowExecuteInfoNV(...)                                    JMP_VK_UTIL__CAST_S(VkOpticalFlowExecuteInfoNV) { .sType =                                        VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkOpticalFlowSessionCreatePrivateDataInfoNV(...)                   JMP_VK_UTIL__CAST_S(VkOpticalFlowSessionCreatePrivateDataInfoNV) { .sType =                    VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceLegacyDitheringFeaturesEXT(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLegacyDitheringFeaturesEXT) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceExternalFormatResolveFeaturesANDROID(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalFormatResolveFeaturesANDROID) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceExternalFormatResolvePropertiesANDROID(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalFormatResolvePropertiesANDROID) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkAndroidHardwareBufferFormatResolvePropertiesANDROID(...)         JMP_VK_UTIL__CAST_S(VkAndroidHardwareBufferFormatResolvePropertiesANDROID) { .sType =           VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceMaintenance5FeaturesKHR(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance5FeaturesKHR) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceMaintenance5PropertiesKHR(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance5PropertiesKHR) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkRenderingAreaInfoKHR(...)                                        JMP_VK_UTIL__CAST_S(VkRenderingAreaInfoKHR) { .sType =                                             VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkDeviceImageSubresourceInfoKHR(...)                               JMP_VK_UTIL__CAST_S(VkDeviceImageSubresourceInfoKHR) { .sType =                                   VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkSubresourceLayout2KHR(...)                                       JMP_VK_UTIL__CAST_S(VkSubresourceLayout2KHR) { .sType =                                            VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkImageSubresource2KHR(...)                                        JMP_VK_UTIL__CAST_S(VkImageSubresource2KHR) { .sType =                                             VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkPipelineCreateFlags2CreateInfoKHR(...)                           JMP_VK_UTIL__CAST_S(VkPipelineCreateFlags2CreateInfoKHR) { .sType =                             VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkBufferUsageFlags2CreateInfoKHR(...)                              JMP_VK_UTIL__CAST_S(VkBufferUsageFlags2CreateInfoKHR) { .sType =                                VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkPhysicalDeviceAntiLagFeaturesAMD(...)                            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAntiLagFeaturesAMD) { .sType =                               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ANTI_LAG_FEATURES_AMD, .pNext = NULL, __VA_ARGS__ }
#define                                              jmp_VkAntiLagDataAMD(...)                                              JMP_VK_UTIL__CAST_S(VkAntiLagDataAMD) { .sType =                                                   VK_STRUCTURE_TYPE_ANTI_LAG_DATA_AMD, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkAntiLagPresentationInfoAMD(...)                                  JMP_VK_UTIL__CAST_S(VkAntiLagPresentationInfoAMD) { .sType =                                      VK_STRUCTURE_TYPE_ANTI_LAG_PRESENTATION_INFO_AMD, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceShaderObjectFeaturesEXT(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderObjectFeaturesEXT) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceShaderObjectPropertiesEXT(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderObjectPropertiesEXT) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkShaderCreateInfoEXT(...)                                         JMP_VK_UTIL__CAST_S(VkShaderCreateInfoEXT) { .sType =                                              VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDevicePipelineBinaryFeaturesKHR(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineBinaryFeaturesKHR) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_BINARY_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkPipelineBinaryCreateInfoKHR(...)                                 JMP_VK_UTIL__CAST_S(VkPipelineBinaryCreateInfoKHR) { .sType =                                     VK_STRUCTURE_TYPE_PIPELINE_BINARY_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkPipelineBinaryInfoKHR(...)                                       JMP_VK_UTIL__CAST_S(VkPipelineBinaryInfoKHR) { .sType =                                            VK_STRUCTURE_TYPE_PIPELINE_BINARY_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkPipelineBinaryKeyKHR(...)                                        JMP_VK_UTIL__CAST_S(VkPipelineBinaryKeyKHR) { .sType =                                             VK_STRUCTURE_TYPE_PIPELINE_BINARY_KEY_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDevicePipelineBinaryPropertiesKHR(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineBinaryPropertiesKHR) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_BINARY_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkReleaseCapturedPipelineDataInfoKHR(...)                          JMP_VK_UTIL__CAST_S(VkReleaseCapturedPipelineDataInfoKHR) { .sType =                             VK_STRUCTURE_TYPE_RELEASE_CAPTURED_PIPELINE_DATA_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkPipelineBinaryDataInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkPipelineBinaryDataInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_PIPELINE_BINARY_DATA_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                       jmp_VkPipelineCreateInfoKHR(...)                                       JMP_VK_UTIL__CAST_S(VkPipelineCreateInfoKHR) { .sType =                                            VK_STRUCTURE_TYPE_PIPELINE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkDevicePipelineBinaryInternalCacheControlKHR(...)                 JMP_VK_UTIL__CAST_S(VkDevicePipelineBinaryInternalCacheControlKHR) { .sType =                   VK_STRUCTURE_TYPE_DEVICE_PIPELINE_BINARY_INTERNAL_CACHE_CONTROL_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkPipelineBinaryHandlesInfoKHR(...)                                JMP_VK_UTIL__CAST_S(VkPipelineBinaryHandlesInfoKHR) { .sType =                                    VK_STRUCTURE_TYPE_PIPELINE_BINARY_HANDLES_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                    jmp_VkPhysicalDeviceTilePropertiesFeaturesQCOM(...)                    JMP_VK_UTIL__CAST_S(VkPhysicalDeviceTilePropertiesFeaturesQCOM) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkTilePropertiesQCOM(...)                                          JMP_VK_UTIL__CAST_S(VkTilePropertiesQCOM) { .sType =                                                VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceAmigoProfilingFeaturesSEC(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAmigoProfilingFeaturesSEC) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkAmigoProfilingSubmitInfoSEC(...)                                 JMP_VK_UTIL__CAST_S(VkAmigoProfilingSubmitInfoSEC) { .sType =                                     VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV) { .sType =        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV) { .sType =         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(...)              JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkMutableDescriptorTypeCreateInfoEXT(...)                          JMP_VK_UTIL__CAST_S(VkMutableDescriptorTypeCreateInfoEXT) { .sType =                             VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceLegacyVertexAttributesFeaturesEXT(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLegacyVertexAttributesFeaturesEXT) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceLegacyVertexAttributesPropertiesEXT(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLegacyVertexAttributesPropertiesEXT) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkLayerSettingsCreateInfoEXT(...)                                  JMP_VK_UTIL__CAST_S(VkLayerSettingsCreateInfoEXT) { .sType =                                      VK_STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM) { .sType =                 VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT) { .sType =         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define  jmp_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(...)  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT) { .sType =   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkLatencySleepModeInfoNV(...)                                      JMP_VK_UTIL__CAST_S(VkLatencySleepModeInfoNV) { .sType =                                          VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                          jmp_VkLatencySleepInfoNV(...)                                          JMP_VK_UTIL__CAST_S(VkLatencySleepInfoNV) { .sType =                                               VK_STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkSetLatencyMarkerInfoNV(...)                                      JMP_VK_UTIL__CAST_S(VkSetLatencyMarkerInfoNV) { .sType =                                          VK_STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                      jmp_VkGetLatencyMarkerInfoNV(...)                                      JMP_VK_UTIL__CAST_S(VkGetLatencyMarkerInfoNV) { .sType =                                          VK_STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                 jmp_VkLatencyTimingsFrameReportNV(...)                                 JMP_VK_UTIL__CAST_S(VkLatencyTimingsFrameReportNV) { .sType =                                     VK_STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkLatencySubmissionPresentIdNV(...)                                JMP_VK_UTIL__CAST_S(VkLatencySubmissionPresentIdNV) { .sType =                                    VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkOutOfBandQueueTypeInfoNV(...)                                    JMP_VK_UTIL__CAST_S(VkOutOfBandQueueTypeInfoNV) { .sType =                                      VK_STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkSwapchainLatencyCreateInfoNV(...)                                JMP_VK_UTIL__CAST_S(VkSwapchainLatencyCreateInfoNV) { .sType =                                    VK_STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkLatencySurfaceCapabilitiesNV(...)                                JMP_VK_UTIL__CAST_S(VkLatencySurfaceCapabilitiesNV) { .sType =                                     VK_STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCooperativeMatrixFeaturesKHR) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkCooperativeMatrixPropertiesKHR(...)                              JMP_VK_UTIL__CAST_S(VkCooperativeMatrixPropertiesKHR) { .sType =                                   VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCooperativeMatrixPropertiesKHR) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define       jmp_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(...)       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM) { .sType =       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(...)          JMP_VK_UTIL__CAST_S(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM) { .sType =         VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceComputeShaderDerivativesFeaturesKHR(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceComputeShaderDerivativesFeaturesKHR) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceComputeShaderDerivativesPropertiesKHR(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceComputeShaderDerivativesPropertiesKHR) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkVideoDecodeAV1CapabilitiesKHR(...)                               JMP_VK_UTIL__CAST_S(VkVideoDecodeAV1CapabilitiesKHR) { .sType =                                   VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_CAPABILITIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkVideoDecodeAV1PictureInfoKHR(...)                                JMP_VK_UTIL__CAST_S(VkVideoDecodeAV1PictureInfoKHR) { .sType =                                   VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PICTURE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkVideoDecodeAV1ProfileInfoKHR(...)                                JMP_VK_UTIL__CAST_S(VkVideoDecodeAV1ProfileInfoKHR) { .sType =                                   VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PROFILE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkVideoDecodeAV1SessionParametersCreateInfoKHR(...)                JMP_VK_UTIL__CAST_S(VkVideoDecodeAV1SessionParametersCreateInfoKHR) { .sType =                 VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                jmp_VkVideoDecodeAV1DpbSlotInfoKHR(...)                                JMP_VK_UTIL__CAST_S(VkVideoDecodeAV1DpbSlotInfoKHR) { .sType =                                  VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceVideoMaintenance1FeaturesKHR(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVideoMaintenance1FeaturesKHR) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                     jmp_VkVideoInlineQueryInfoKHR(...)                                     JMP_VK_UTIL__CAST_S(VkVideoInlineQueryInfoKHR) { .sType =                                         VK_STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDevicePerStageDescriptorSetFeaturesNV(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDevicePerStageDescriptorSetFeaturesNV) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceImageProcessing2FeaturesQCOM(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageProcessing2FeaturesQCOM) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceImageProcessing2PropertiesQCOM(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageProcessing2PropertiesQCOM) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkSamplerBlockMatchWindowCreateInfoQCOM(...)                       JMP_VK_UTIL__CAST_S(VkSamplerBlockMatchWindowCreateInfoQCOM) { .sType =                         VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkSamplerCubicWeightsCreateInfoQCOM(...)                           JMP_VK_UTIL__CAST_S(VkSamplerCubicWeightsCreateInfoQCOM) { .sType =                              VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceCubicWeightsFeaturesQCOM(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCubicWeightsFeaturesQCOM) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                               jmp_VkBlitImageCubicWeightsInfoQCOM(...)                               JMP_VK_UTIL__CAST_S(VkBlitImageCubicWeightsInfoQCOM) { .sType =                                  VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                      jmp_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(...)                      JMP_VK_UTIL__CAST_S(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM) { .sType =                         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(...)            JMP_VK_UTIL__CAST_S(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM) { .sType =             VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPhysicalDeviceCubicClampFeaturesQCOM(...)                        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCubicClampFeaturesQCOM) { .sType =                           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM, .pNext = NULL, __VA_ARGS__ }
#define jmp_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(...) JMP_VK_UTIL__CAST_S(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT) { .sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPipelineVertexInputDivisorStateCreateInfoKHR(...)                JMP_VK_UTIL__CAST_S(VkPipelineVertexInputDivisorStateCreateInfoKHR) { .sType =                 VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define               jmp_VkPhysicalDeviceShaderFloatControls2FeaturesKHR(...)               JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderFloatControls2FeaturesKHR) { .sType =                VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkScreenBufferPropertiesQNX(...)                                   JMP_VK_UTIL__CAST_S(VkScreenBufferPropertiesQNX) { .sType =                                        VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX, .pNext = NULL, __VA_ARGS__ }
#define                             jmp_VkScreenBufferFormatPropertiesQNX(...)                             JMP_VK_UTIL__CAST_S(VkScreenBufferFormatPropertiesQNX) { .sType =                                 VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkImportScreenBufferInfoQNX(...)                                   JMP_VK_UTIL__CAST_S(VkImportScreenBufferInfoQNX) { .sType =                                       VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX, .pNext = NULL, __VA_ARGS__ }
#define                                           jmp_VkExternalFormatQNX(...)                                           JMP_VK_UTIL__CAST_S(VkExternalFormatQNX) { .sType =                                                 VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceLayeredDriverPropertiesMSFT(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLayeredDriverPropertiesMSFT) { .sType =                      VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceIndexTypeUint8FeaturesKHR(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceIndexTypeUint8FeaturesKHR) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceLineRasterizationFeaturesKHR(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLineRasterizationFeaturesKHR) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPipelineRasterizationLineStateCreateInfoKHR(...)                 JMP_VK_UTIL__CAST_S(VkPipelineRasterizationLineStateCreateInfoKHR) { .sType =                   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceLineRasterizationPropertiesKHR(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLineRasterizationPropertiesKHR) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                  jmp_VkCalibratedTimestampInfoKHR(...)                                  JMP_VK_UTIL__CAST_S(VkCalibratedTimestampInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceShaderExpectAssumeFeaturesKHR(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderExpectAssumeFeaturesKHR) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceMaintenance6FeaturesKHR(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance6FeaturesKHR) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceMaintenance6PropertiesKHR(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance6PropertiesKHR) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                         jmp_VkBindMemoryStatusKHR(...)                                         JMP_VK_UTIL__CAST_S(VkBindMemoryStatusKHR) { .sType =                                              VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                   jmp_VkBindDescriptorSetsInfoKHR(...)                                   JMP_VK_UTIL__CAST_S(VkBindDescriptorSetsInfoKHR) { .sType =                                       VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                        jmp_VkPushConstantsInfoKHR(...)                                        JMP_VK_UTIL__CAST_S(VkPushConstantsInfoKHR) { .sType =                                             VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkPushDescriptorSetInfoKHR(...)                                    JMP_VK_UTIL__CAST_S(VkPushDescriptorSetInfoKHR) { .sType =                                        VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkPushDescriptorSetWithTemplateInfoKHR(...)                        JMP_VK_UTIL__CAST_S(VkPushDescriptorSetWithTemplateInfoKHR) { .sType =                          VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkSetDescriptorBufferOffsetsInfoEXT(...)                           JMP_VK_UTIL__CAST_S(VkSetDescriptorBufferOffsetsInfoEXT) { .sType =                              VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkBindDescriptorBufferEmbeddedSamplersInfoEXT(...)                 JMP_VK_UTIL__CAST_S(VkBindDescriptorBufferEmbeddedSamplersInfoEXT) { .sType =                   VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define        jmp_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(...)        JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV) { .sType =          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceRawAccessChainsFeaturesNV(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRawAccessChainsFeaturesNV) { .sType =                       VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define   jmp_VkPhysicalDeviceShaderRelaxedExtendedInstructionFeaturesKHR(...)   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderRelaxedExtendedInstructionFeaturesKHR) { .sType =    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_RELAXED_EXTENDED_INSTRUCTION_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceCommandBufferInheritanceFeaturesNV(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceCommandBufferInheritanceFeaturesNV) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMMAND_BUFFER_INHERITANCE_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceMaintenance7FeaturesKHR(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance7FeaturesKHR) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_7_FEATURES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkPhysicalDeviceMaintenance7PropertiesKHR(...)                     JMP_VK_UTIL__CAST_S(VkPhysicalDeviceMaintenance7PropertiesKHR) { .sType =                        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_7_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                   jmp_VkPhysicalDeviceLayeredApiPropertiesListKHR(...)                   JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLayeredApiPropertiesListKHR) { .sType =                     VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_LIST_KHR, .pNext = NULL, __VA_ARGS__ }
#define                       jmp_VkPhysicalDeviceLayeredApiPropertiesKHR(...)                       JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLayeredApiPropertiesKHR) { .sType =                          VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define                 jmp_VkPhysicalDeviceLayeredApiVulkanPropertiesKHR(...)                 JMP_VK_UTIL__CAST_S(VkPhysicalDeviceLayeredApiVulkanPropertiesKHR) { .sType =                   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_API_VULKAN_PROPERTIES_KHR, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define         jmp_VkPhysicalDeviceShaderReplicatedCompositesFeaturesEXT(...)         JMP_VK_UTIL__CAST_S(VkPhysicalDeviceShaderReplicatedCompositesFeaturesEXT) { .sType =           VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_REPLICATED_COMPOSITES_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                jmp_VkPhysicalDeviceRayTracingValidationFeaturesNV(...)                JMP_VK_UTIL__CAST_S(VkPhysicalDeviceRayTracingValidationFeaturesNV) { .sType =                  VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV, .pNext = NULL, __VA_ARGS__ }
#define            jmp_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesEXT(...)            JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesEXT) { .sType =              VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define          jmp_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesEXT(...)          JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesEXT) { .sType =            VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_EXT, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkGeneratedCommandsMemoryRequirementsInfoEXT(...)                  JMP_VK_UTIL__CAST_S(VkGeneratedCommandsMemoryRequirementsInfoEXT) { .sType =                     VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkIndirectExecutionSetCreateInfoEXT(...)                           JMP_VK_UTIL__CAST_S(VkIndirectExecutionSetCreateInfoEXT) { .sType =                              VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                                    jmp_VkGeneratedCommandsInfoEXT(...)                                    JMP_VK_UTIL__CAST_S(VkGeneratedCommandsInfoEXT) { .sType =                                         VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkIndirectCommandsLayoutCreateInfoEXT(...)                         JMP_VK_UTIL__CAST_S(VkIndirectCommandsLayoutCreateInfoEXT) { .sType =                            VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkIndirectCommandsLayoutTokenEXT(...)                              JMP_VK_UTIL__CAST_S(VkIndirectCommandsLayoutTokenEXT) { .sType =                                  VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_EXT, .pNext = NULL, __VA_ARGS__ }
#define                        jmp_VkWriteIndirectExecutionSetPipelineEXT(...)                        JMP_VK_UTIL__CAST_S(VkWriteIndirectExecutionSetPipelineEXT) { .sType =                           VK_STRUCTURE_TYPE_WRITE_INDIRECT_EXECUTION_SET_PIPELINE_EXT, .pNext = NULL, __VA_ARGS__ }
#define                          jmp_VkWriteIndirectExecutionSetShaderEXT(...)                          JMP_VK_UTIL__CAST_S(VkWriteIndirectExecutionSetShaderEXT) { .sType =                             VK_STRUCTURE_TYPE_WRITE_INDIRECT_EXECUTION_SET_SHADER_EXT, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkIndirectExecutionSetPipelineInfoEXT(...)                         JMP_VK_UTIL__CAST_S(VkIndirectExecutionSetPipelineInfoEXT) { .sType =                            VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_PIPELINE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                           jmp_VkIndirectExecutionSetShaderInfoEXT(...)                           JMP_VK_UTIL__CAST_S(VkIndirectExecutionSetShaderInfoEXT) { .sType =                              VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_SHADER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                     jmp_VkIndirectExecutionSetShaderLayoutInfoEXT(...)                     JMP_VK_UTIL__CAST_S(VkIndirectExecutionSetShaderLayoutInfoEXT) { .sType =                       VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_SHADER_LAYOUT_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                            jmp_VkGeneratedCommandsPipelineInfoEXT(...)                            JMP_VK_UTIL__CAST_S(VkGeneratedCommandsPipelineInfoEXT) { .sType =                                VK_STRUCTURE_TYPE_GENERATED_COMMANDS_PIPELINE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define                              jmp_VkGeneratedCommandsShaderInfoEXT(...)                              JMP_VK_UTIL__CAST_S(VkGeneratedCommandsShaderInfoEXT) { .sType =                                  VK_STRUCTURE_TYPE_GENERATED_COMMANDS_SHADER_INFO_EXT, .pNext = NULL, __VA_ARGS__ }
#define             jmp_VkPhysicalDeviceImageAlignmentControlFeaturesMESA(...)             JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageAlignmentControlFeaturesMESA) { .sType =               VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_FEATURES_MESA, .pNext = NULL, __VA_ARGS__ }
#define           jmp_VkPhysicalDeviceImageAlignmentControlPropertiesMESA(...)           JMP_VK_UTIL__CAST_S(VkPhysicalDeviceImageAlignmentControlPropertiesMESA) { .sType =             VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_PROPERTIES_MESA, .pNext = NULL, __VA_ARGS__ }
#define                         jmp_VkImageAlignmentControlCreateInfoMESA(...)                         JMP_VK_UTIL__CAST_S(VkImageAlignmentControlCreateInfoMESA) { .sType =                            VK_STRUCTURE_TYPE_IMAGE_ALIGNMENT_CONTROL_CREATE_INFO_MESA, .pNext = NULL, __VA_ARGS__ }
#define                  jmp_VkPhysicalDeviceDepthClampControlFeaturesEXT(...)                  JMP_VK_UTIL__CAST_S(VkPhysicalDeviceDepthClampControlFeaturesEXT) { .sType =                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_CONTROL_FEATURES_EXT, .pNext = NULL, __VA_ARGS__ }
#define              jmp_VkPipelineViewportDepthClampControlCreateInfoEXT(...)              JMP_VK_UTIL__CAST_S(VkPipelineViewportDepthClampControlCreateInfoEXT) { .sType =               VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLAMP_CONTROL_CREATE_INFO_EXT, .pNext = NULL, __VA_ARGS__ }


#endif // JMP_VK_UTILS_ENABLE_VK_STRUCTURE
#endif // JMP_VK_UTILS_H
